{"version":3,"sources":["Redux/message-reducer.js","api/index.js","hoc/withAuthRedirect.js","components/module/AddPostForm/index.js","components/Profile/Posts/AddPost/AddPostForm.jsx","components/Profile/Posts/AddPost/AddPost.jsx","components/Profile/Posts/AddPost/AddPostContainer.js","components/Profile/Posts/Posts.jsx","components/Profile/Posts/MapPosts/MapPosts.jsx","components/Profile/Posts/MapPosts/MapPostContainer.js","components/module/SubscribeButton/SubscribeBtn.jsx","components/module/SubscribeButton/SubscribeBtnContainer.js","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Users/Users.module.scss","components/Authorization/Login/Login.module.scss","components/Profile/Posts/AddPost/AddPost.module.scss","Redux/profile-reducer.js","components/module/LoginForm/LoginForm.module.scss","Redux/users-reducer.js","components/Nav/Nav.module.scss","serviceWorker.js","Redux/news-reducer.js","Redux/auth-reducer.js","Redux/redux-store.js","components/Nav/Nav.jsx","components/Footer/Footer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Users/UserCard/UserCard.jsx","components/Users/Pagination/Pagination.jsx","components/Users/Users.jsx","components/Users/UsersContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/module/LoginForm/EmailInput.js","components/module/LoginForm/Password.js","components/Authorization/Login/LoginForm.jsx","components/Authorization/Login/Login.jsx","components/Authorization/Login/LoginContainer.js","components/Profile/MyProfile/UserStatus.jsx","components/Profile/MyProfile/MyProfile.jsx","components/Profile/MyProfile/MyProfileContainer.js","hoc/withSuspense.js","App.js","index.js","assets/Image/ava.jpg","components/Profile/Posts/Post.module.scss","components/Header/Header.module.scss","components/module/preloader/index.js","components/utils/validators/Validator.js","components/Users/Pagination/Pagination.module.scss","components/Users/UserCard/UserCard.module.scss","components/module/SubscribeButton/SubscribeBtn.module.scss","components/module/AddPostForm/AddMessageForm.module.scss"],"names":["initialState","dialogs","id","user","message","actionCreatorAddMessage","type","MESSAGE_REDUCER","state","action","Date","now","instance","axios","create","withCredentials","baseURL","headers","followedAPI","getFollow","userId","get","then","response","data","deleteFollow","delete","postFollow","post","userAPI","getUserProfile","getUsers","numberOfPages","numberOfUsers","getUserStatus","putMyStatus","status","put","getAuthMe","postLogin","email","password","rememberMe","deleteLogin","withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","auth","TextareaPost","input","meta","className","style","form","valid","textarea","noValid","error","AddPostReduxForm","reduxForm","onSubmit","handleSubmit","Field","name","component","validate","maxLength500","AddPost","s","addPost","value","AddPostContainer","profilePage","newPostText","dispatch","actionCreatorAddPost","changePost","actionCreatorChangePost","Posts","src","img","alt","posts","likeAndDisLike","like","likeActive","noActiv","onClick","setLike","index","aria-hidden","count","disLike","setDisLike","MapPost","map","key","MapPostContainer","text","actionCreatorLike","actionCreatorDisLike","SubscribeButton","disable","disableSubscribeBtn","some","e","authorization","userFollowed","disabled","btnOnFollow","unfollow","btnFollow","follow","SubscribeBtnContainer","usersPage","login","unfollowThunk","followThunk","module","exports","User","userStatus","followedUser","FollowToggle","changeValueMyStatus","getUserProfileThankCreator","getFollowThankCreator","PROFILE_REDUCER","newPost","users","totalUsersCount","isFetching","portitionSize","setPage","page","disableBtn","isFeatching","getUsersThankCreator","items","totalCount","resultCode","USERS_REDUCER","followed","filter","Boolean","window","location","hostname","match","news","NEWS_REDUCER","messages","setAuthData","authMeThankCreator","AUTH_REDUCER","reducers","combineReducers","messagePage","newsPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Nav","nav","teg","activeClassName","active","setting","Footer","News","Music","music","Setting","UserCard","photos","small","avatar","user__content","Pagination","pagination","Math","ceil","pages","i","push","portitionCount","useState","PortitionNumber","setPortitionNamber","leftPortition","rigthPortition","prev","p","pagination__pageActive","pagination__page","onSetPage","next","Users","UsersPage","fetching","UsersContainer","Header","Logout","logout","header","ExitIco","logoutBtn","login__nik","login__link","HeaderContainer","authMe","logoutThankCreator","EmailInput","dirty","touched","emailError","messageError","Password","LoginReduxForm","htmlFor","x","y","width","height","fill","d","placeholder","minLength4","Login","loginThankCreator","stopSubmit","_error","UserStatus","createRef","edidMode","setEdidMode","myStatus","ref","onChange","current","autoFocus","onBlur","MyProfile","fullName","setMyStatus","href","MyProfileContainer","preloader","getMyProfile","setState","compose","withRouter","fulfilled","whitSuspense","Suspense","fallback","ProfileContainer","lazy","MessageContainer","App","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Preloader","max","min","length","undefined","test"],"mappings":"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","file":"static/js/main.e254942e.chunk.js","sourcesContent":["const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n   dialogs: [{\r\n            id: 1,\r\n            user: 'Andrey',\r\n         },\r\n         {\r\n            id: 2,\r\n            user: 'Sergey',\r\n         },\r\n         {\r\n            id: 3,\r\n            user: 'Pedro',\r\n         },\r\n         {\r\n            id: 4,\r\n            user: 'Max',\r\n         },\r\n         {\r\n            id: 5,\r\n            user: 'Ivan',\r\n         },\r\n         {\r\n            id: 6,\r\n            user: 'Dimon',\r\n         },\r\n      ],\r\n\r\n      message: [{\r\n            id: 1,\r\n            message: 'Hello!!! It is my first message. How are you?'\r\n         },\r\n         {\r\n            id: 2,\r\n            message: 'Hello! i am ok)'\r\n         },\r\n         {\r\n            id: 3,\r\n            message: 'Hello!!!'\r\n         },\r\n         {\r\n            id: 4,\r\n            message: 'Bye!'\r\n         },\r\n      ],\r\n}\r\n\r\nlet  MESSAGE_REDUCER = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ADD_NEW_MESSAGE:\r\n         let message = {\r\n            id: Date.now(),\r\n            message: action.message\r\n         }\r\n         return{\r\n            ...state,\r\n            message: [...state.message, message],\r\n         }\r\n      default:\r\n         return state;\r\n   } \r\n}\r\nexport let actionCreatorAddMessage = (message) => ({\r\n   type: ADD_NEW_MESSAGE,\r\n   message,\r\n})\r\n\r\n\r\nexport default MESSAGE_REDUCER;","import axios from 'axios';\r\n\r\nlet instance = axios.create({\r\n   withCredentials: true,\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n      headers: {\r\n         'API-KEY': '19d35e01-5453-43df-a4a5-324ffa914553'\r\n      }\r\n})\r\n\r\nexport let followedAPI = {\r\n   getFollow(userId) {\r\n      return instance.get(`follow/${userId}`).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n\r\n   deleteFollow(userId) {\r\n      return instance.delete(`follow/${userId}`).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n\r\n   postFollow(userId) {\r\n      return instance.post(`follow/${userId}`).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n};\r\n\r\nexport let userAPI = {\r\n   getUserProfile (userId) {\r\n      return instance.get(`profile/${userId}`).then(response => {\r\n         return response.data\r\n   })},\r\n   getUsers (numberOfPages, numberOfUsers) {\r\n      return instance.get(`users?page=${numberOfPages}&count=${numberOfUsers}`).then(response => {\r\n         return response.data\r\n   })},\r\n   getUserStatus (userId) {\r\n      return instance.get(`/profile/status/${userId}`).then(response => {\r\n         return response.data\r\n   })},\r\n   putMyStatus (status) {\r\n      return instance.put(`/profile/status`, status)}\r\n}\r\n\r\nexport let getAuthMe = () => {\r\n   return instance.get(`auth/me`).then(response => {\r\n      return response.data \r\n   });\r\n}\r\n\r\nexport let postLogin = (email, password, rememberMe) => {\r\n   return instance.post(`/auth/login`, {email, password, rememberMe}) \r\n}\r\nexport let deleteLogin = () => {\r\n   return instance.delete(`/auth/login`) \r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let mapStateToProps = (state) => {\r\n      return {\r\n         isAuth: state.auth.isAuth,\r\n      }\r\n   }\r\n\r\n   return connect(mapStateToProps, {})(RedirectComponent)\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './AddMessageForm.module.scss'\r\n\r\nconst TextareaPost = ({input, meta, ...props}) => {\r\n   return (\r\n      <div className={style.form}>\r\n         <textarea {...input} {...props} className={meta.valid ? style.textarea : style.noValid}/>\r\n         {\r\n            !meta.valid &&\r\n             <p>{meta.error}</p>\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TextareaPost;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextareaPost from '../../../module/AddPostForm';\r\nimport { maxLength500 } from '../../../utils/validators/Validator';\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <Field\r\n            name='post'\r\n            component={TextareaPost}\r\n            validate={[maxLength500]}\r\n            type=\"text\"\r\n         />\r\n         <button>add post</button>\r\n      </form>\r\n   );\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n   form: 'addPostProfile'\r\n})(AddPostForm)\r\n\r\nexport default AddPostReduxForm;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './AddPost.module.scss'\r\nimport AddPostForm from './AddPostForm';\r\n\r\nconst AddPost = (props) => {  \r\nlet onAddPost = (value) => {\r\n   props.addPost(value.post)\r\n}\r\n\r\n   return (\r\n      <div className = {s.addPost}>\r\n         <AddPostForm \r\n            onSubmit={onAddPost}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AddPost;\r\n\r\n","import {actionCreatorAddPost, actionCreatorChangePost} from '../../../../Redux/profile-reducer'\r\nimport AddPost from './AddPost';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      value: state.profilePage.newPostText,\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (post) => {\r\n         dispatch(actionCreatorAddPost(post))\r\n      },\r\n      changePost: (post) => {\r\n         dispatch(actionCreatorChangePost(post))\r\n      }\r\n   }\r\n}\r\n\r\nconst AddPostContainer = connect(mapStateToProps, mapDispatchToProps)(AddPost)\r\n\r\nexport default AddPostContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.scss'\r\nimport img from '../../../assets/Image/ava.jpg'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst Posts = (props) => { \r\n\r\n   let onLike = function () {\r\n      props.setLike(props.index)\r\n   }\r\n   let onDisLike = function () {\r\n      props.setDisLike(props.index)\r\n   }\r\n\r\n   return (\r\n      <div className={s.Posts}>\r\n         <div className={s.post}>         \r\n            <img src={img} alt=\"ava\"/>\r\n            <i>{props.posts.user}</i>\r\n         </div>\r\n         <p>{props.posts.message}</p>\r\n\r\n         <div className={s.likeAndDisLike}>\r\n            <div \r\n               className={props.posts.like.status ? s.likeActive : s.noActiv}\r\n               onClick={onLike}\r\n            >\r\n               <div className=\"fa fa-thumbs-up\" aria-hidden=\"true\">\r\n                  <span>{props.posts.like.count}</span>\r\n               </div>\r\n            </div>\r\n\r\n            <div \r\n               className={props.posts.disLike.status ? s.likeActive : s.noActiv}\r\n               onClick={onDisLike}\r\n            >\r\n               <div className=\"fa fa-thumbs-down\" aria-hidden=\"true\">\r\n                  <span>{props.posts.disLike.count}</span>\r\n               </div> \r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Posts from '../Posts.jsx';\r\n\r\nconst MapPost = (props) => {\r\n   return (\r\n      <div className=\"MapPosts\">\r\n         {\r\n            props.posts.map((post, index) => {\r\n               return <Posts \r\n                        key={post.id} \r\n                        posts={post} \r\n                        setLike={props.setLike}\r\n                        setDisLike={props.setDisLike}\r\n                        index={index}\r\n                     />\r\n            })\r\n         }\r\n         \r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default MapPost;","import { connect } from 'react-redux';\r\nimport MapPost from './MapPosts';\r\nimport { actionCreatorLike, actionCreatorDisLike } from '../../../../Redux/profile-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n     posts: state.profilePage.posts,\r\n     text: state.profilePage.text,\r\n   }\r\n   \r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n     setLike: (index) => {\r\n       dispatch(actionCreatorLike(index))\r\n     },\r\n     setDisLike: (index) => {\r\n       dispatch(actionCreatorDisLike(index))\r\n     } \r\n   }\r\n   \r\n}\r\n\r\nconst MapPostContainer = connect(mapStateToProps, mapDispatchToProps)(MapPost);\r\n\r\nexport default MapPostContainer;","import React from 'react'\r\nimport s from './SubscribeBtn.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SubscribeButton = (props) => {\r\n   let disable = props.disableSubscribeBtn.some(e => e === props.id)\r\n\r\n   if (!props.authorization) return <NavLink to='/login' className={s.btnFollow}>войти</NavLink>\r\n   return (\r\n      <>\r\n         {props.userFollowed\r\n            ? <button\r\n               disabled = {disable}\r\n               className={s.btnOnFollow}\r\n               onClick={() => props.unfollow(props.id)}\r\n            >{disable ? <i className=\"fa fa-spinner fa-pulse fa-fw\"></i> : 'отписаться'}</button>\r\n\r\n            : <button\r\n               disabled = {disable}\r\n               className={s.btnFollow}\r\n               onClick={() => props.follow(props.id)}\r\n            >{disable ? <i className=\"fa fa-spinner fa-pulse fa-fw\"></i> : 'Подписаться'}</button>\r\n         }\r\n      </>\r\n   )\r\n}\r\n\r\nexport default SubscribeButton;\r\n","import React from 'react';\r\nimport SubscribeButton from './SubscribeBtn';\r\nimport { connect } from 'react-redux';\r\nimport {unfollowThunk, followThunk} from '../../../Redux/users-reducer'\r\n\r\nclass SubscribeBtnContainer extends React.Component {\r\n\r\n   render() {\r\n      return (\r\n         <SubscribeButton {...this.props}/>\r\n      );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      disableSubscribeBtn: state.usersPage.disableSubscribeBtn,\r\n      authorization: state.auth.login,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   unfollow: unfollowThunk, \r\n   follow: followThunk,\r\n})(SubscribeBtnContainer)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3t4KC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__2L22a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"Settings_setting__2HLLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersPage\":\"Users_UsersPage__2v0Th\",\"btnShoeMore\":\"Users_btnShoeMore__3xNDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1Ukpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"AddPost_addPost__11wKw\"};","import {followedAPI, userAPI} from '../api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst NEW_POST = 'NEW-POST';\r\nconst LIKE = 'LIKE';\r\nconst DIS_LIKE = 'DIS-LIKE';\r\nconst USER_PROFILE = 'USER_PROFILE'\r\nconst SET_FOLLOWED_USER = 'SET-FOLLOWED-USER'\r\nconst GET_USER_STATUS = 'GET_USER_STATUS'\r\nconst CHANGE_MY_STATUS = 'CHANGE_MY_STATUS'\r\n\r\nlet initialState = {\r\n   User: {},\r\n   userStatus: null,\r\n   followedUser: null,\r\n   newPostText: '',\r\n   text: 0,\r\n      posts: [{\r\n            id: 1,\r\n            user: 'Andery',\r\n            message: 'Hello how are you?',\r\n            like: {\r\n               status: true,\r\n               count: 56,\r\n            },\r\n            disLike: {\r\n               status: false,\r\n               count: 3,\r\n            }\r\n         },\r\n         {\r\n            id: 2,\r\n            user: 'Dimon',\r\n            message: 'Hello! I am ok) And you?',\r\n            like: {\r\n               status: false,\r\n               count: 8,\r\n            },\r\n            disLike: {\r\n               status: false,\r\n               count: 0,\r\n            }\r\n         },\r\n         {\r\n            id: 3,\r\n            user: 'Ivan',\r\n            message: 'My first posts...',\r\n            like: {\r\n               status: false,\r\n               count: 5,\r\n            },\r\n            disLike: {\r\n               status: true,\r\n               count: 5,\r\n            }\r\n         },\r\n         {\r\n            id: 4,\r\n            user: 'Ivan',\r\n            message: 'Bye!',\r\n            like: {\r\n               status: false,\r\n               count: 2,\r\n            },\r\n            disLike: {\r\n               status: true,\r\n               count: 7,\r\n            }\r\n         }\r\n      ],\r\n}\r\n\r\nlet  PROFILE_REDUCER = (state = initialState, action) => {\r\n   switch(action.type){\r\n      case ADD_POST: \r\n         let newPost = {\r\n            id: Date.now(),\r\n            user: 'User name',\r\n            message: action.post,\r\n            like: {\r\n               status: false,\r\n               count: 0,\r\n            },\r\n            disLike: {\r\n               status: false,\r\n               count: 0,\r\n            }\r\n         }\r\n         return {\r\n            ...state,\r\n            posts: [newPost, ...state.posts ],\r\n         }\r\n      case NEW_POST: \r\n         return {\r\n            ...state,\r\n            newPostText: action.text,\r\n         }\r\n\r\n      case LIKE: \r\n         if (!state.posts[action.index].like.status) {\r\n              return {\r\n                 ...state,\r\n                 ...state.posts[action.index] = {\r\n                     ...state.posts[action.index], \r\n                     like: {\r\n                        status: true,\r\n                        count: state.posts[action.index].like.count + 1,\r\n                     },\r\n                     disLike: {\r\n                        status: false,\r\n                        count: state.posts[action.index].disLike.status === true \r\n                           ? state.posts[action.index].disLike.count - 1\r\n                           : state.posts[action.index].disLike.count,\r\n                     }\r\n                 },\r\n                 text: state.posts[action.index].like.count,\r\n              }\r\n         } else return {\r\n               ...state,\r\n               ...state.posts[action.index] = {\r\n                  ...state.posts[action.index],\r\n                  like: {\r\n                     status: false,\r\n                     count: state.posts[action.index].like.count - 1,\r\n                  },\r\n               },\r\n               text: state.posts[action.index].like.count,\r\n            }\r\n      case DIS_LIKE: \r\n         if (!state.posts[action.index].disLike.status) {\r\n              return {\r\n                 ...state,\r\n                 ...state.posts[action.index] = {\r\n                     ...state.posts[action.index], \r\n                     disLike: {\r\n                        status: true,\r\n                        count: state.posts[action.index].disLike.count + 1,\r\n                     },\r\n                     like: {\r\n                        status: false,\r\n                        count: state.posts[action.index].like.status === true \r\n                           ? state.posts[action.index].like.count - 1\r\n                           : state.posts[action.index].like.count,\r\n                     }\r\n                 },\r\n                 text: state.posts[action.index].disLike.count,\r\n              }\r\n         } else return {\r\n               ...state,\r\n               ...state.posts[action.index] = {\r\n                  ...state.posts[action.index],\r\n                  disLike: {\r\n                     status: false,\r\n                     count: state.posts[action.index].disLike.count - 1,\r\n                  },\r\n                  \r\n               },\r\n               text: state.posts[action.index].disLike.count,\r\n            }\r\n      case USER_PROFILE:\r\n         return {\r\n            ...state,\r\n            User: {...action.user}\r\n         }\r\n      case SET_FOLLOWED_USER:\r\n         return {\r\n            ...state,\r\n            followedUser: action.follow\r\n         }\r\n      case 'FOLLOWED_TOGLE':\r\n         return {\r\n            ...state,\r\n            followedUser: state.followedUser = !state.followedUser\r\n         }\r\n      case GET_USER_STATUS:\r\n         return {\r\n            ...state,\r\n            userStatus: action.status\r\n         }      \r\n      case CHANGE_MY_STATUS:\r\n         return {\r\n            ...state,\r\n            userStatus: action.status,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport let actionCreatorAddPost = (post) => ({\r\n   type: ADD_POST,\r\n   post,\r\n})\r\nexport let actionCreatorChangePost = (text) => ({\r\n   type: NEW_POST,\r\n   text: text,\r\n})\r\nexport let actionCreatorLike = (index) => ({\r\n   type: 'LIKE',\r\n   index: index,\r\n})\r\nexport let actionCreatorDisLike = (index) => ({\r\n   type: 'DIS-LIKE',\r\n   index: index,\r\n})\r\nexport let setUserProfile = (user) => ({\r\n   type: 'USER_PROFILE',\r\n   user: user,\r\n})\r\nexport let setFollowedUser = (follow) => ({\r\n   type: 'SET-FOLLOWED-USER',\r\n   follow,\r\n})\r\nexport let FollowToggle = () => ({\r\n   type: 'FOLLOWED_TOGLE',\r\n})\r\nexport let UserStatus = (status) => ({\r\n   type: 'GET_USER_STATUS',\r\n   status\r\n})\r\nexport let changeValueMyStatus = (status) => ({\r\n   type: 'CHANGE_MY_STATUS',\r\n   status,\r\n})\r\n\r\nexport const getUserProfileThankCreator= (userId) => {\r\n   return (dispatch) => {\r\n      userAPI.getUserProfile(userId).then(data => dispatch(setUserProfile(data)));\r\n   }\r\n}\r\nexport const getFollowThankCreator= (userId) => {\r\n   return (dispatch) => {\r\n      followedAPI.getFollow(userId).then(data => dispatch(setFollowedUser(data)));\r\n   }\r\n}\r\nexport const getUserStatus= (userId) => {\r\n   return (dispatch) => {\r\n      userAPI.getUserStatus(userId).then(data => dispatch(UserStatus(data)));\r\n   }\r\n}\r\n\r\n\r\nexport default PROFILE_REDUCER;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"LoginForm_email__37VvK\",\"emailError\":\"LoginForm_emailError__3RKX3\",\"messageError\":\"LoginForm_messageError__3rGNQ\"};","import {followedAPI, userAPI} from '../api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_PAGE = 'SET-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst DISABLE_SUBSCRIBE_BTN = 'DISABLE_SUBSCRIBE_BTN'\r\n\r\nlet initialState = {\r\n   users: [],\r\n   numberOfPages: 1,\r\n   numberOfUsers: 6,\r\n   totalUsersCount: 0,\r\n   isFetching: false,\r\n   portitionSize: 10,\r\n   disableSubscribeBtn: []\r\n}\r\n\r\nlet USERS_REDUCER = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW: \r\n         return {\r\n            ...state,\r\n            users: state.users.map(e => {\r\n               if (e.id === action.id ) {\r\n                  return {...e, followed: true}\r\n               }\r\n               return e\r\n            })\r\n         }                \r\n      case UNFOLLOW: \r\n         return {\r\n            ...state,\r\n            users: state.users.map(e => {\r\n               if (e.id === action.id ) {\r\n                  return {...e, followed: false}\r\n               }\r\n               return e\r\n            })\r\n         };\r\n      case SET_USERS:\r\n         return {\r\n            ...state,\r\n            users: action.users\r\n         }               \r\n      case SET_PAGE:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            numberOfPages: action.page\r\n         }               \r\n      case SET_TOTAL_COUNT:\r\n         return {\r\n            ...state,\r\n            totalUsersCount: action.totalCount\r\n         }                            \r\n      case IS_FETCHING:\r\n         return {\r\n            ...state,\r\n            isFetching: action.isFetching,\r\n         }                            \r\n      case DISABLE_SUBSCRIBE_BTN:\r\n         return {\r\n            ...state,\r\n            disableSubscribeBtn: action.isFeatching \r\n               ?  [...state.disableSubscribeBtn, action.userId] \r\n               :  state.disableSubscribeBtn.filter(id => id !== action.userId) \r\n               \r\n         }                            \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport let follow = (id) => {\r\n   return {\r\n      type: 'FOLLOW',\r\n      id: id,\r\n   }\r\n}\r\nexport let unfollow = (id) => {\r\n   return {\r\n      type: 'UNFOLLOW',\r\n      id: id,\r\n   }\r\n}\r\nexport let setUsers = (users) => {\r\n   return {\r\n      type: 'SET-USERS',\r\n      users: users,\r\n   }\r\n}\r\nexport let setPage = (page) => {\r\n   return {\r\n      type: 'SET-PAGE',\r\n      page: page,\r\n   }\r\n}\r\nexport let setTotalCount = (number) => {\r\n   return {\r\n      type: 'SET-TOTAL-COUNT',\r\n      totalCount: number,\r\n   }\r\n}\r\nexport let isFetching = (isFetching) => {\r\n   return {\r\n      type: 'IS_FETCHING',\r\n      isFetching,\r\n   }\r\n}\r\nexport let disableBtn = (userId, isFeatching) => {\r\n   return {\r\n      type: 'DISABLE_SUBSCRIBE_BTN',\r\n      userId, isFeatching\r\n\r\n   }\r\n}\r\n\r\nexport const getUsersThankCreator = (numberOfPages, numberOfUsers) => {\r\n   return (dispatch) => {\r\n      dispatch(isFetching(true))\r\n      userAPI.getUsers(numberOfPages, numberOfUsers).then(data => {\r\n         dispatch(setUsers(data.items))\r\n         dispatch(setTotalCount(data.totalCount))\r\n         dispatch(isFetching(false))\r\n      })\r\n   }\r\n}\r\n\r\nexport const unfollowThunk = (id) => {\r\n   return (dispatch) => {\r\n      dispatch(disableBtn(id, true))\r\n      followedAPI.deleteFollow(id).then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(unfollow(id))\r\n         }\r\n         dispatch(disableBtn(id, false))\r\n      })\r\n   }\r\n}\r\nexport const followThunk = (id) => {\r\n   return (dispatch) => {\r\n      dispatch(disableBtn(id, true))\r\n      followedAPI.postFollow(id).then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(follow(id))\r\n         }\r\n         dispatch(disableBtn(id, false))\r\n      }) \r\n   }\r\n}\r\n\r\nexport default USERS_REDUCER;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2sLwg\",\"active\":\"Nav_active__1MyEJ\",\"setting\":\"Nav_setting__2pp3b\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n      news: 'NEWS state'\r\n}\r\n\r\nlet NEWS_REDUCER = function (state = initialState, action) {\r\n\r\n   return state;\r\n}\r\n\r\nexport default NEWS_REDUCER;","import { getAuthMe, postLogin, deleteLogin } from '../api'\r\nimport { stopSubmit } from 'redux-form'\r\nconst SET_AUTH_DATA = 'SET_AUTH_DATA'\r\nconst LOGIN_SET_ME_ID = 'LOGIN_SET_ME_ID'\r\nconst LOGOUT = 'LOGOUT'\r\n\r\nlet initialState = {\r\n   id: null,\r\n   login: null,\r\n   email: null,\r\n   messages: null,\r\n   isAuth: false,\r\n}\r\n\r\nlet AUTH_REDUCER = function (state = initialState, action) {\r\n   switch (action.type) {\r\n      case SET_AUTH_DATA:\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n            isAuth: true, \r\n         }\r\n      case LOGIN_SET_ME_ID:\r\n         return {\r\n            ...state,\r\n            id: action.id,\r\n            messages: action.messages,\r\n            isAuth: action.isAuth,\r\n         }\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            id: action.id,\r\n            login: null,\r\n            email: null,\r\n            messages: action.messages,\r\n            isAuth: action.isAuth,\r\n         }\r\n      default:\r\n         break;\r\n   }\r\n   return state;\r\n}\r\n\r\nexport let setAuthData = (data) => ({\r\n   type: SET_AUTH_DATA,\r\n   data: data, \r\n})\r\nlet loginSetMeId = (id, messages, isAuth) => ({\r\n   type: LOGIN_SET_ME_ID,\r\n   id, messages, isAuth\r\n})\r\nlet logout = (id, messages, isAuth) => ({\r\n   type: LOGOUT,\r\n   id, messages, isAuth\r\n})\r\n\r\nexport const authMeThankCreator = () => {\r\n   return (dispatch) => {\r\n      getAuthMe().then(data => {\r\n            if (data.resultCode === 0) {\r\n               dispatch(setAuthData({...data.data})) \r\n            }\r\n         })\r\n   }\r\n}\r\n\r\nexport const loginThankCreator = (email, password, rememberMe) => (dispatch) => {\r\n   postLogin(email, password, rememberMe).then(response => {\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(loginSetMeId(response.data.data.userId, response.data.messages, true))\r\n         getAuthMe().then(data => {\r\n            if (data.resultCode === 0) {\r\n               dispatch(setAuthData({...data.data}))\r\n            }\r\n         })\r\n      }\r\n      else{\r\n         dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\r\n      }\r\n   })\r\n}\r\nexport const logoutThankCreator = () => (dispatch) => {\r\n   deleteLogin().then(response => {\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(logout(null, null, false))\r\n      }\r\n   })\r\n}\r\n\r\nexport default AUTH_REDUCER;","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport profilePage from './profile-reducer'\r\nimport messagePage from './message-reducer'\r\nimport newsPage from './news-reducer'\r\nimport usersPage from './users-reducer'\r\nimport auth from './auth-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n   profilePage,\r\n   messagePage,   \r\n   usersPage,\r\n   newsPage,\r\n   auth,\r\n   form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Nav.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () =>  {\r\n   return (\r\n      <nav className={s.nav}>\r\n         <ul>\r\n            <NavLink teg=\"li\" to=\"/Myprofile\" activeClassName={s.active}>Моя страница</NavLink>\r\n            <NavLink to=\"/message\" activeClassName={s.active}>Сообщения</NavLink>\r\n            <NavLink to=\"/news\" activeClassName={s.active}>Новости</NavLink>\r\n            <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}>Пользователи</NavLink>\r\n            <NavLink to=\"/setting\" className={s.setting} activeClassName={s.active}>\r\n               <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>Настройки\r\n            </NavLink>\r\n         </ul>\r\n      </nav>\r\n   )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n   return ( \r\n      <footer className=\"footer\">\r\n         \r\n      </footer>\r\n   )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) => {\r\n   return ( \r\n      <div className={s.news}>\r\n         <h1>News</h1>\r\n      </div>         \r\n   )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nconst Music = () => {\r\n   return ( \r\n   <div className={s.music}>\r\n      <h1>Music</h1>\r\n   </div>\r\n   )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nconst Setting = () => {\r\n   return ( \r\n   <div className = {s.setting} >\r\n      <h1>Settings</h1>\r\n   </div>\r\n   )\r\n}\r\n\r\nexport default Setting;","import React from 'react';\r\nimport s from './UserCard.module.scss';\r\nimport avatar from '../../../assets/Image/ava.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport SubscribeBtnContainer from '../../module/SubscribeButton/SubscribeBtnContainer'\r\n\r\nconst UserCard = (props) => {\r\n   return (\r\n      <div>\r\n         {props.users.map(e => {\r\n         return (\r\n            <div key={e.id} className={s.user}>\r\n               <NavLink to={\"/profile/\" + e.id} >\r\n                  <img \r\n                     src = {e.photos.small != null ? e.photos.small : avatar}\r\n                     alt=\"avatar\" \r\n                     className={s.avatar}\r\n                  />\r\n               </NavLink>\r\n\r\n                  <div className={s.user__content}>\r\n                  <h2>{e.name}</h2>\r\n                     <p>{e.status}</p>\r\n                  </div>\r\n               <SubscribeBtnContainer \r\n                     id={e.id}\r\n                     userFollowed={e.followed}\r\n                  />\r\n            </div>\r\n         )\r\n   })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UserCard;\r\n","import React, { useState } from 'react';\r\nimport style from './Pagination.module.scss'\r\n\r\nconst Pagination = (props) => {\r\n   let pagination = Math.ceil(props.totalUsersCount / props.numberOfUsers);\r\n   let pages = []\r\n   for (let i = 1; i <= pagination; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   let portitionCount = Math.ceil(pagination / props.portitionSize)\r\n   let [PortitionNumber, setPortitionNamber] = useState(1)\r\n   let leftPortition = (PortitionNumber - 1) * props.portitionSize + 1\r\n   let rigthPortition = PortitionNumber * props.portitionSize\r\n\r\n   return (\r\n      <div className={style.pagination}>\r\n         {PortitionNumber > 1 &&\r\n            <button \r\n               className={style.prev}\r\n               onClick={() => { setPortitionNamber(PortitionNumber - 1) }}\r\n            >&larr;</button>\r\n         }\r\n            {\r\n               pages\r\n                  .filter(p => p >= leftPortition && p <= rigthPortition)\r\n                  .map(e => {\r\n                     return <span\r\n                        key={e}\r\n                        className={props.numberOfPages === e ? style.pagination__pageActive : style.pagination__page}\r\n                        onClick={() => { props.onSetPage(e) }}\r\n                     >{e}</span>\r\n                  })\r\n            }\r\n\r\n         {portitionCount > PortitionNumber &&\r\n            <button \r\n            className={style.next}\r\n               onClick={() => { setPortitionNamber(PortitionNumber + 1) }}\r\n            >&rarr;</button>\r\n         }\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport UserCard from './UserCard/UserCard';\r\nimport style from './Users.module.scss';\r\nimport Preloader from '../module/preloader';\r\nimport Pagination from './Pagination/Pagination';\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n      return (\r\n         <div className={style.UsersPage}>\r\n            {props.fetching\r\n               ? <Preloader />\r\n               : <UserCard\r\n                     users={props.users}\r\n                     follow={props.follow}\r\n                     unfollow={props.unfollow}\r\n                     disableSubscribeBtn={props.disableSubscribeBtn}\r\n                     disableBtn={props.disableBtn}\r\n                  />\r\n            }\r\n            \r\n            <Pagination \r\n               onSetPage={props.onSetPage} \r\n               numberOfPages={props.numberOfPages}\r\n               totalUsersCount={props.totalUsersCount}\r\n               numberOfUsers={props.numberOfUsers}\r\n               portitionSize={props.portitionSize}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n\r\n   export default Users;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport {\r\n   isFetching,\r\n   setPage,\r\n   getUsersThankCreator,\r\n} from '../../Redux/users-reducer';\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getUsers(this.props.numberOfPages, this.props.numberOfUsers)\r\n   }\r\n\r\n   onSetPage = (page) => { \r\n      this.props.getUsers(page, this.props.numberOfUsers)\r\n      this.props.setPage(page);\r\n   }  \r\n\r\n   render() {  \r\n         return <Users \r\n                  users={this.props.users}\r\n                  numberOfPages={this.props.numberOfPages}\r\n                  numberOfUsers={this.props.numberOfUsers}\r\n                  totalUsersCount={this.props.totalUsersCount}\r\n                  onSetPage={this.onSetPage}\r\n                  fetching={this.props.fetching}\r\n                  portitionSize={this.props.portitionSize}\r\n               />\r\n            }\r\n}\r\n\r\nconst mapStateToProps = (state) => { \r\n   return {\r\n      text: state.usersPage.text,\r\n      users: state.usersPage.users,\r\n      numberOfPages: state.usersPage.numberOfPages,\r\n      numberOfUsers: state.usersPage.numberOfUsers,\r\n      totalUsersCount: state.usersPage.totalUsersCount,\r\n      fetching: state.usersPage.isFetching,\r\n      portitionSize: state.usersPage.portitionSize,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    isFetching, setPage,\r\n   getUsers: getUsersThankCreator,\r\n})(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\nimport avatar from '../../assets/Image/ava.jpg'\r\n\r\nconst Header = (props) => {\r\n\r\n\tlet Logout = () => {\r\n\t\tprops.logout()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t<div className={s.ExitIco}>\r\n\t\t{\r\n\t\t\tprops.isAuth && \r\n\t\t\t<NavLink to='./login' onClick={Logout} className=\"fa fa-sign-out fa-3x\"></NavLink>\r\n\t\t}\r\n\t\t</div>\r\n\r\n\t\t<div className={s.login}>\r\n\t\t{props.isAuth && \r\n\t\t\t<NavLink to='./login' className={s.logoutBtn} onClick={Logout}>Выйти</NavLink>\t\r\n\t\t}\r\n\t\t\t{!props.isAuth\r\n\t\t\t\t? \t<NavLink to='/login' className={s.login__link}>Login</NavLink>\r\n\t\t\t\t: \t<div className={s.login__nik}>\r\n\t\t\t\t\t\t<NavLink to='/Myprofile'>{props.login}</NavLink>\r\n\t\t\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n     \t\t}\r\n\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {authMeThankCreator, logoutThankCreator} from '../../Redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.authMe()\r\n   }\r\n   render() {\r\n      return (\r\n         <Header {...this.props.data} \r\n            logout={this.props.logoutThankCreator}\r\n            isAuth = {this.props.isAuth}\r\n            login = {this.props.login}\r\n         />\r\n      );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n      login: state.auth.login,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   authMe: authMeThankCreator,\r\n   logoutThankCreator,\r\n})(HeaderContainer)\r\n","import React from 'react';\r\nimport style from './LoginForm.module.scss'\r\n\r\nconst EmailInput = ({input, meta, ...props}) => {\r\n   const dirty = !meta.dirty && meta.touched;\r\n   const error = meta.error && meta.touched\r\n   return (\r\n   <div className={error || dirty ? style.emailError : style.email}>\r\n      <input {...input} {...props}/>\r\n      {error &&\r\n         <p className={style.messageError}>{meta.error}</p>\r\n      }\r\n      {dirty &&\r\n         <p className={style.messageError}>Поле не должно быть пустым</p>\r\n      }\r\n   </div>\r\n   )\r\n}\r\n\r\nexport default EmailInput;\r\n","import React from 'react';\r\nimport style from './LoginForm.module.scss'\r\n\r\nconst Password = ({ input, meta, ...props }) => {\r\n   const dirty = !meta.dirty && meta.touched;\r\n   const error = meta.error && meta.touched;\r\n   return (\r\n      <div className={error || dirty ? style.emailError : style.email}>\r\n         <input {...input} {...props} />\r\n         {error &&\r\n            <p className={style.messageError}>{meta.error}</p>\r\n         }\r\n         {dirty &&\r\n            <p className={style.messageError}>Поле не должно быть пустым</p>\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport './LoginForm.scss'\r\nimport EmailInput from '../../module/LoginForm/EmailInput';\r\nimport Password from '../../module/LoginForm/Password';\r\nimport { email, maxLength500, minLength4 } from '../../utils/validators/Validator';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n   if (props.isAuth) {\r\n   return   <Redirect to='/Myprofile'></Redirect>\r\n   }\r\n  \r\n   return (\r\n      <div>\r\n         <form onSubmit={props.handleSubmit} className='login-form'>\r\n            <div className=\"flex-row\">\r\n               <label className=\"lf--label\" htmlFor=\"email\">\r\n                  <svg x=\"0px\" y=\"0px\" width=\"12px\" height=\"13px\">\r\n                     <path fill=\"#B1B7C4\" d=\"M8.9,7.2C9,6.9,9,6.7,9,6.5v-4C9,1.1,7.9,0,6.5,0h-1C4.1,0,3,1.1,3,2.5v4c0,0.2,0,0.4,0.1,0.7 C1.3,7.8,0,9.5,0,11.5V13h12v-1.5C12,9.5,10.7,7.8,8.9,7.2z M4,2.5C4,1.7,4.7,1,5.5,1h1C7.3,1,8,1.7,8,2.5v4c0,0.2,0,0.4-0.1,0.6 l0.1,0L7.9,7.3C7.6,7.8,7.1,8.2,6.5,8.2h-1c-0.6,0-1.1-0.4-1.4-0.9L4.1,7.1l0.1,0C4,6.9,4,6.7,4,6.5V2.5z M11,12H1v-0.5 c0-1.6,1-2.9,2.4-3.4c0.5,0.7,1.2,1.1,2.1,1.1h1c0.8,0,1.6-0.4,2.1-1.1C10,8.5,11,9.9,11,11.5V12z\" />\r\n                  </svg>\r\n               </label>\r\n               <Field \r\n                  id='email' \r\n                  className='lf--input' \r\n                  type=\"email\" placeholder='email:' \r\n                  name='email' \r\n                  component={EmailInput}\r\n                  validate={[email]} \r\n               />\r\n            </div>\r\n            <div className=\"flex-row\">\r\n               <label className=\"lf--label\" htmlFor=\"password\">\r\n                  <svg x=\"0px\" y=\"0px\" width=\"15px\" height=\"5px\">\r\n                     <g>\r\n                        <path fill=\"#B1B7C4\" d=\"M6,2L6,2c0-1.1-1-2-2.1-2H2.1C1,0,0,0.9,0,2.1v0.8C0,4.1,1,5,2.1,5h1.7C5,5,6,4.1,6,2.9V3h5v1h1V3h1v2h1V3h1 V2H6z M5.1,2.9c0,0.7-0.6,1.2-1.3,1.2H2.1c-0.7,0-1.3-0.6-1.3-1.2V2.1c0-0.7,0.6-1.2,1.3-1.2h1.7c0.7,0,1.3,0.6,1.3,1.2V2.9z\" />\r\n                     </g>\r\n                  </svg>\r\n               </label>\r\n               <Field \r\n                  id='password' \r\n                  className='lf--input' \r\n                  type=\"password\" \r\n                  placeholder='password' \r\n                  name='password' \r\n                  component={Password} \r\n                  validate={[maxLength500, minLength4]}\r\n               />\r\n            </div>\r\n            <Field \r\n               id='rememberMe' \r\n               type=\"checkbox\" \r\n               name='rememberMe' \r\n               component='input' \r\n            />      \r\n            <label className=\"checkBox\" htmlFor=\"rememberMe\">запомнить меня</label>\r\n            <button className='lf--submit'>submit</button>    \r\n            {\r\n               props.error && <div className=\"formError\"><p>{props.error}</p></div>\r\n            }\r\n         </form>\r\n      </div>\r\n\r\n   );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n   form: 'login'\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm;\r\n","import React from 'react';\r\nimport style from './Login.module.scss'\r\nimport LoginReduxForm from './LoginForm';\r\n\r\nconst Login = (props) => {\r\n   let submitLogin = (value) => {\r\n      props.loginThankCreator(value.email, value.password, value.rememberMe)\r\n   }\r\n   return (\r\n      <div className={style.Login}>\r\n         <h3>Авторизация</h3>\r\n         <LoginReduxForm onSubmit={submitLogin} isAuth={props.isAuth}/>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from './Login';\r\nimport {loginThankCreator} from '../../../Redux/auth-reducer';\r\n\r\nconst LoginContainer = (props) => {\r\n   return <Login {...props}/>; \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   loginThankCreator\r\n})(LoginContainer)\r\n","import React, { useState } from 'react';\r\nimport './MyProfile.scss'\r\nimport { userAPI } from '../../../api';\r\n\r\nconst UserStatus = (props) => {\r\n   let input = React.createRef()\r\n   let [edidMode, setEdidMode] = useState(true)\r\n   let setMyStatus = () => {\r\n      setEdidMode(true)\r\n      userAPI.putMyStatus({ status: `${props.myStatus}`})\r\n   }\r\n   let changeMyStatus = () => {\r\n      props.changeValueMyStatus(input.current.value)\r\n   }\r\n   return (\r\n      <div>\r\n      {edidMode \r\n         ? <div className = 'MyStatus' >\r\n               {props.status === null\r\n                  ?  <i>без статуса</i>\r\n                  : <h5>{props.myStatus}</h5>  \r\n               }\r\n               <i \r\n                  className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" \r\n                  onClick={() => setEdidMode(false)}\r\n               ></i>\r\n            </div>\r\n         :  <input\r\n               ref={input}\r\n               type=\"text\"\r\n               value={props.myStatus}\r\n               onChange={() => changeMyStatus()}  \r\n               autoFocus={true} \r\n               onBlur={() => setMyStatus()}\r\n               \r\n            />\r\n      }\r\n         \r\n         \r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UserStatus;\r\n","import React from 'react';\r\nimport './MyProfile.scss';\r\nimport AddPostContainer from '../Posts/AddPost/AddPostContainer';\r\nimport MapPostContainer from '../Posts/MapPosts/MapPostContainer';\r\nimport img from '../../../assets/Image/ava.jpg'\r\nimport UserStatus from './UserStatus';\r\n\r\nconst MyProfile = (props) => {\r\n   \r\n   return (\r\n      <div className=\"MyProfile\">\r\n         <div className=\"MyProfile__user\">\r\n            <div className=\"\">\r\n               {\r\n                  !{ ...props.user.photos }.small\r\n                     ? <img src={img} alt=\"avatar\"  className=\"MyAvatar\"/>\r\n                     : <img src={{ ...props.photos }.small} alt=\"avatar\" />\r\n               }\r\n               <h5>{props.user.fullName}</h5>\r\n               <UserStatus \r\n                  myStatus={props.myStatus}\r\n                  setMyStatus={props.setMyStatus}\r\n                  changeValueMyStatus={props.changeValueMyStatus}\r\n               />\r\n               <a href={`mailto:${props.email}`}>{props.email}</a>\r\n            </div>\r\n         </div>\r\n      \r\n         <div className = \"MyProfile__posts\" >\r\n            <AddPostContainer />\r\n            <MapPostContainer />\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MyProfile;\r\n","import React from 'react';\r\nimport MyProfile from './MyProfile';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getUserProfileThankCreator, getUserStatus, changeValueMyStatus } from '../../../Redux/profile-reducer';\r\nimport { authMeThankCreator } from '../../../Redux/auth-reducer';\r\nimport Preloader from '../../module/preloader'\r\nimport { getAuthMe } from '../../../api';\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect';\r\n\r\nclass MyProfileContainer extends React.Component {    \r\n      state = {\r\n         preloader: true,\r\n      }\r\n   componentDidMount(){\r\n      getAuthMe().then(response => {\r\n         if (response.resultCode === 0) {\r\n            this.props.getMyProfile(response.data.id)\r\n            this.props.getUserStatus(response.data.id)\r\n            this.setState({preloader: false})\r\n         }\r\n      })\r\n   }\r\n\r\n   render() {     \r\n      if (this.state.preloader) {\r\n         return <Preloader />\r\n      }\r\n      return <MyProfile {...this.props}/>\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      user: state.profilePage.User,\r\n      myStatus: state.profilePage.userStatus,\r\n      email: state.auth.email,\r\n      fulfilled: state.auth.fulfilled,\r\n   }\r\n}\r\n\r\n\r\nexport default compose(\r\n   withRouter,\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, {\r\n      getMyProfile: getUserProfileThankCreator,\r\n      authMeThankCreator, getUserStatus, changeValueMyStatus,\r\n   }),\r\n)(MyProfileContainer)\r\n","import React from 'react';\r\nimport Preloader from '../components/module/preloader';\r\n\r\nexport let whitSuspense = (Component) => {\r\n   return (props) => {\r\n      return (\r\n         <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n         </React.Suspense>\r\n      )\r\n   }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport Nav from './components/Nav/Nav'\nimport Footer from './components/Footer/Footer';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Authorization/Login/LoginContainer';\nimport MyProfileContainer from './components/Profile/MyProfile/MyProfileContainer';\nimport { whitSuspense } from './hoc/withSuspense';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/Profile.container')) ;\nconst MessageContainer = React.lazy(() => import('./components/Message/MessageContainer'));\n\nfunction App(props) {\n   return (\n      <BrowserRouter>\n         <div className=\"App\">\n            <HeaderContainer />\n            <Nav />\n            <div className=\"mainContent\">\n               <Route \n                  path='/login'\n                  render={() => <LoginContainer />}\n               />               \n               <Route\n                  path=\"/Myprofile\"\n                  render={() => <MyProfileContainer />}\n               />\n               <Route\n                  path=\"/profile/:userId?\"\n                  render={whitSuspense(ProfileContainer)}\n               />\n               <Route\n                  path=\"/message\"\n                  render={whitSuspense(MessageContainer)}/>\n\n               <Route \n                  path=\"/news\" \n                  render={() => <News />}\n               />\n\n               <Route \n                  path=\"/music\" \n                  component={Music} \n               />\n               <Route \n                  path=\"/users\" \n                  component={UsersContainer} \n               />\n\n               <Route \n                  path=\"/setting\" \n                  component={Setting} \n               />\n            </div>\n            <Footer />\n         </div>\n      </BrowserRouter>\n\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n   <HashRouter>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </HashRouter>,\n   document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/ava.2dca3c78.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Post_Posts__s5e-v\",\"post\":\"Post_post__1AvUM\",\"likeAndDisLike\":\"Post_likeAndDisLike___RxY0\",\"likeActive\":\"Post_likeActive__2hUQu\",\"noActiv\":\"Post_noActiv__eJC_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__r3du6\",\"ExitIco\":\"Header_ExitIco__2du4j\",\"login\":\"Header_login__3NaN7\",\"login__link\":\"Header_login__link__3bGTY\",\"login__nik\":\"Header_login__nik__1Fj6g\",\"logoutBtn\":\"Header_logoutBtn__KGXqq\"};","import React from 'react';\r\nimport './Preloader.scss';\r\n\r\nconst Preloader = () => {\r\n   return (\r\n      <div className=\"preloader\">\r\n         <div id=\"cube-loader\">\r\n            <div className=\"caption\">\r\n               <div className=\"cube-loader\">\r\n               <div className=\"cube loader-1\"></div>\r\n               <div className=\"cube loader-2\"></div>\r\n               <div className=\"cube loader-4\"></div>\r\n               <div className=\"cube loader-3\"></div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Preloader;\r\n","\r\nconst maxLength = max => value =>\r\n   value && value.length > max \r\n   ? `Максимальная длина сообщения ${max} символов` \r\n   : undefined\r\nexport const maxLength500 = maxLength(500)\r\n\r\nconst minLength = min => value =>\r\n   value && value.length < min \r\n   ? `Must be ${min} characters or more` \r\n   : undefined\r\nexport const minLength4 = minLength(4)\r\n\r\nexport const email = value =>\r\n   value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) \r\n   ?  'Invalid email address' \r\n   :  undefined\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1JQ2p\",\"pagination__page\":\"Pagination_pagination__page__njCfP\",\"pagination__pageActive\":\"Pagination_pagination__pageActive__1F-_F\",\"prev\":\"Pagination_prev__3X-Zc\",\"next\":\"Pagination_next__2WQFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserCard_user__1OPVG\",\"avatar\":\"UserCard_avatar__2BHMV\",\"user__content\":\"UserCard_user__content__1-BIf\",\"locations\":\"UserCard_locations__1Lg61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFollow\":\"SubscribeBtn_btnFollow__1RwV0\",\"btnOnFollow\":\"SubscribeBtn_btnOnFollow__1PnOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddMessageForm_form__1gxLE\",\"textarea\":\"AddMessageForm_textarea__1aBQa\",\"noValid\":\"AddMessageForm_noValid__1Q7O3\"};"],"sourceRoot":""}