{"version":3,"sources":["Redux/message-reducer.js","api/index.js","components/module/AddPostForm/index.js","components/Profile/Posts/AddPost/AddPostForm.jsx","components/Profile/Posts/AddPost/AddPost.jsx","components/Profile/Posts/AddPost/AddPostContainer.js","components/Profile/Posts/Posts.jsx","components/Profile/Posts/MapPosts/MapPosts.jsx","components/Profile/Posts/MapPosts/MapPostContainer.js","components/module/SubscribeButton/SubscribeBtn.jsx","components/module/SubscribeButton/SubscribeBtnContainer.js","components/Music/Music.module.css","components/Settings/Settings.module.scss","components/Users/Users.module.scss","components/Authorization/Login/Login.module.scss","components/Authorization/TestAccountData/TestAccData.module.scss","components/Profile/Posts/AddPost/AddPost.module.scss","Redux/profile-reducer.js","components/module/LoginForm/LoginForm.module.scss","Redux/users-reducer.js","components/Nav/Nav.module.scss","components/News/NewsPost/NewsPost.module.scss","serviceWorker.js","Redux/news-reducer.js","Redux/auth-reducer.js","Redux/settings-reducer.js","Redux/redux-store.js","components/Nav/Nav.jsx","components/Footer/Footer.jsx","components/News/NewsPost/NewsPost.jsx","components/News/News.jsx","components/News/NewsContainer.js","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Settings/SettingsContainer.js","components/Users/UserCard/UserCard.jsx","components/Users/Pagination/Pagination.jsx","components/Users/Users.jsx","components/Users/UsersContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/module/LoginForm/EmailInput.js","components/module/LoginForm/Password.js","components/Authorization/Login/LoginForm.jsx","components/Authorization/TestAccountData/index.js","components/Authorization/Login/Login.jsx","components/Authorization/Login/LoginContainer.js","components/Profile/MyProfile/UserInformation/UserStatus.jsx","components/Profile/MyProfile/UserInformation/UserInfo.jsx","components/module/SVG/AddAvatar.js","components/Profile/MyProfile/UserInformation/UserAvatar.jsx","components/Profile/MyProfile/MyProfile.jsx","components/Profile/MyProfile/MyProfileContainer.js","hoc/withSuspense.js","App.js","index.js","assets/Image/ava.jpg","components/Profile/Posts/Post.module.scss","components/Header/Header.module.scss","components/module/preloader/index.js","components/utils/validators/Validator.js","components/Users/Pagination/Pagination.module.scss","hoc/withAuthRedirect.js","components/Users/UserCard/UserCard.module.scss","components/module/SubscribeButton/SubscribeBtn.module.scss","components/module/AddPostForm/AddMessageForm.module.scss"],"names":["initialState","dialogs","id","user","message","actionCreatorAddMessage","type","MESSAGE_REDUCER","state","action","Date","now","instance","axios","create","withCredentials","baseURL","headers","followedAPI","getFollow","userId","get","then","response","data","deleteFollow","delete","postFollow","post","userAPI","getUserProfile","getUsers","numberOfPages","numberOfUsers","getUserStatus","putMyStatus","status","put","putMyPhoto","photo","formData","FormData","append","getAuthMe","postLogin","email","password","rememberMe","deleteLogin","newskey","instanceNews","newsAPI","getNewsSearch","country","TextareaPost","input","meta","props","className","style","form","valid","textarea","noValid","error","AddPostReduxForm","reduxForm","onSubmit","handleSubmit","Field","name","component","validate","maxLength500","AddPost","s","addPost","value","AddPostContainer","connect","profilePage","newPostText","dispatch","actionCreatorAddPost","changePost","actionCreatorChangePost","Posts","src","img","alt","posts","likeAndDisLike","like","likeActive","noActiv","onClick","setLike","index","aria-hidden","count","disLike","setDisLike","MapPost","map","key","MapPostContainer","text","actionCreatorLike","actionCreatorDisLike","SubscribeButton","disable","disableSubscribeBtn","some","e","authorization","userFollowed","disabled","btnOnFollow","unfollow","btnFollow","follow","to","SubscribeBtnContainer","this","React","Component","usersPage","auth","login","unfollowThunk","followThunk","module","exports","User","userStatus","followedUser","FollowToggle","changeValueMyStatus","getUserProfileThankCreator","getFollowThankCreator","saveMyPhotoTC","resultCode","photos","PROFILE_REDUCER","newPost","users","totalUsersCount","isFetching","portitionSize","setPage","page","disableBtn","isFeatching","getUsersThankCreator","items","totalCount","USERS_REDUCER","followed","filter","Boolean","window","location","hostname","match","MainNews","NEWS_REDUCER","news","messages","isAuth","setAuthData","authMeThankCreator","AUTH_REDUCER","SETTING_REDUSER","reducers","combineReducers","messagePage","settingPage","newsPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Nav","nav","teg","activeClassName","active","setting","Footer","NewsPost","i","publishedAt","newsPost","newsPost__title","title","content","href","url","target","rel","urlToImage","description","newsPost__author","author","newsPost__date","replace","linkToSource","source","News","compose","NewsCountryHeadlinesTC","setNewsCountryHeadlines","articles","useEffect","getNews","Music","music","Setting","withAuthRedirect","UserCard","small","avatar","user__content","Pagination","pagination","Math","ceil","pages","push","portitionCount","useState","PortitionNumber","setPortitionNamber","leftPortition","rigthPortition","prev","p","pagination__pageActive","pagination__page","onSetPage","next","Users","UsersPage","fetching","UsersContainer","Header","Logout","logout","header","ExitIco","logoutBtn","login__nik","myPhoto","login__link","HeaderContainer","authMe","logoutThankCreator","EmailInput","dirty","touched","emailError","messageError","Password","LoginReduxForm","htmlFor","x","y","width","height","fill","d","placeholder","minLength4","TestAccountData","testAccount","Login","loginThankCreator","stopSubmit","_error","UserStatus","createRef","edidMode","setEdidMode","myStatus","ref","onChange","current","autoFocus","onBlur","UserInfo","fullName","setMyStatus","AddAvatarSVG","version","viewBox","UserAvatar","photoLarge","files","AddAvatar","MyProfile","large","MyProfileContainer","preloader","getMyProfile","setState","withRouter","fulfilled","whitSuspense","Suspense","fallback","ProfileContainer","lazy","MessageContainer","App","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Preloader","max","min","length","undefined","test","RedirectComponent"],"mappings":"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","file":"static/js/main.8d9cd14a.chunk.js","sourcesContent":["const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n   dialogs: [{\r\n            id: 1,\r\n            user: 'Andrey',\r\n         },\r\n         {\r\n            id: 2,\r\n            user: 'Sergey',\r\n         },\r\n         {\r\n            id: 3,\r\n            user: 'Pedro',\r\n         },\r\n         {\r\n            id: 4,\r\n            user: 'Max',\r\n         },\r\n         {\r\n            id: 5,\r\n            user: 'Ivan',\r\n         },\r\n         {\r\n            id: 6,\r\n            user: 'Dimon',\r\n         },\r\n      ],\r\n\r\n      message: [{\r\n            id: 1,\r\n            message: 'Hello!!! It is my first message. How are you?'\r\n         },\r\n         {\r\n            id: 2,\r\n            message: 'Hello! i am ok)'\r\n         },\r\n         {\r\n            id: 3,\r\n            message: 'Hello!!!'\r\n         },\r\n         {\r\n            id: 4,\r\n            message: 'Bye!'\r\n         },\r\n      ],\r\n}\r\n\r\nlet  MESSAGE_REDUCER = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ADD_NEW_MESSAGE:\r\n         let message = {\r\n            id: Date.now(),\r\n            message: action.message\r\n         }\r\n         return{\r\n            ...state,\r\n            message: [...state.message, message],\r\n         }\r\n      default:\r\n         return state;\r\n   } \r\n}\r\nexport let actionCreatorAddMessage = (message) => ({\r\n   type: ADD_NEW_MESSAGE,\r\n   message,\r\n})\r\n\r\n\r\nexport default MESSAGE_REDUCER;","import axios from 'axios';\r\n\r\nlet instance = axios.create({\r\n   withCredentials: true,\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n      headers: {\r\n         'API-KEY': '994c0563-a343-4b38-a674-54b0f1bd315c'\r\n      }\r\n})\r\n\r\nexport let followedAPI = {\r\n   getFollow(userId) {\r\n      return instance.get(`follow/${userId}`).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n\r\n   deleteFollow(userId) {\r\n      return instance.delete(`follow/${userId}`).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n\r\n   postFollow(userId) {\r\n      return instance.post(`follow/${userId}`).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n};\r\n\r\nexport let userAPI = {\r\n   getUserProfile (userId) {\r\n      return instance.get(`profile/${userId}`).then(response => {\r\n         return response.data\r\n   })},\r\n   getUsers (numberOfPages, numberOfUsers) {\r\n      return instance.get(`users?page=${numberOfPages}&count=${numberOfUsers}`).then(response => {\r\n         return response.data\r\n   })},\r\n   getUserStatus (userId) {\r\n      return instance.get(`/profile/status/${userId}`).then(response => {\r\n         return response.data\r\n   })},\r\n   putMyStatus (status) {\r\n      return instance.put(`/profile/status`, status)\r\n   },\r\n   putMyPhoto(photo) {\r\n      const formData = new FormData()\r\n      formData.append(\"image\", photo)\r\n      return instance.put(`/profile/photo`, formData, {}).then(response => {\r\n         return response.data\r\n      })\r\n   },\r\n}\r\n\r\nexport let getAuthMe = () => {\r\n   return instance.get(`auth/me`).then(response => {\r\n      return response.data \r\n   });\r\n}\r\n\r\nexport let postLogin = (email, password, rememberMe) => {\r\n   return instance.post(`/auth/login`, {email, password, rememberMe}) \r\n}\r\nexport let deleteLogin = () => {\r\n   return instance.delete(`/auth/login`) \r\n}\r\n\r\n//API News\r\nconst newskey = 'deca95af7ec24bd7881b9d59143b9780';\r\nlet instanceNews = axios.create({ \r\n   baseURL: 'https://newsapi.org/v2/'\r\n})\r\n\r\nexport let newsAPI = {\r\n\r\n   getNewsSearch(country = 'ua'){\r\n      return  instanceNews.get(`top-headlines?country=${country}&apiKey=${newskey}`)\r\n   },\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport style from './AddMessageForm.module.scss'\r\n\r\nconst TextareaPost = ({input, meta, ...props}) => {\r\n   return (\r\n      <div className={style.form}>\r\n         <textarea {...input} {...props} className={meta.valid ? style.textarea : style.noValid}/>\r\n         {\r\n            !meta.valid &&\r\n             <p>{meta.error}</p>\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TextareaPost;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextareaPost from '../../../module/AddPostForm';\r\nimport { maxLength500 } from '../../../utils/validators/Validator';\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <Field\r\n            name='post'\r\n            component={TextareaPost}\r\n            validate={[maxLength500]}\r\n            type=\"text\"\r\n         />\r\n         <button>add post</button>\r\n      </form>\r\n   );\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n   form: 'addPostProfile'\r\n})(AddPostForm)\r\n\r\nexport default AddPostReduxForm;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './AddPost.module.scss'\r\nimport AddPostForm from './AddPostForm';\r\n\r\nconst AddPost = (props) => {  \r\nlet onAddPost = (value) => {\r\n   props.addPost(value.post)\r\n}\r\n\r\n   return (\r\n      <div className = {s.addPost}>\r\n         <AddPostForm \r\n            onSubmit={onAddPost}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AddPost;\r\n\r\n","import {actionCreatorAddPost, actionCreatorChangePost} from '../../../../Redux/profile-reducer'\r\nimport AddPost from './AddPost';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      value: state.profilePage.newPostText,\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (post) => {\r\n         dispatch(actionCreatorAddPost(post))\r\n      },\r\n      changePost: (post) => {\r\n         dispatch(actionCreatorChangePost(post))\r\n      }\r\n   }\r\n}\r\n\r\nconst AddPostContainer = connect(mapStateToProps, mapDispatchToProps)(AddPost)\r\n\r\nexport default AddPostContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.scss'\r\nimport img from '../../../assets/Image/ava.jpg'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst Posts = (props) => { \r\n\r\n   let onLike = function () {\r\n      props.setLike(props.index)\r\n   }\r\n   let onDisLike = function () {\r\n      props.setDisLike(props.index)\r\n   }\r\n\r\n   return (\r\n      <div className={s.Posts}>\r\n         <div className={s.post}>         \r\n            <img src={img} alt=\"ava\"/>\r\n            <i>{props.posts.user}</i>\r\n         </div>\r\n         <p>{props.posts.message}</p>\r\n\r\n         <div className={s.likeAndDisLike}>\r\n            <div \r\n               className={props.posts.like.status ? s.likeActive : s.noActiv}\r\n               onClick={onLike}\r\n            >\r\n               <div className=\"fa fa-thumbs-up\" aria-hidden=\"true\">\r\n                  <span>{props.posts.like.count}</span>\r\n               </div>\r\n            </div>\r\n\r\n            <div \r\n               className={props.posts.disLike.status ? s.likeActive : s.noActiv}\r\n               onClick={onDisLike}\r\n            >\r\n               <div className=\"fa fa-thumbs-down\" aria-hidden=\"true\">\r\n                  <span>{props.posts.disLike.count}</span>\r\n               </div> \r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Posts from '../Posts.jsx';\r\n\r\nconst MapPost = (props) => {\r\n   return (\r\n      <div className=\"MapPosts\">\r\n         {\r\n            props.posts.map((post, index) => {\r\n               return <Posts \r\n                        key={post.id} \r\n                        posts={post} \r\n                        setLike={props.setLike}\r\n                        setDisLike={props.setDisLike}\r\n                        index={index}\r\n                     />\r\n            })\r\n         }\r\n         \r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default MapPost;","import { connect } from 'react-redux';\r\nimport MapPost from './MapPosts';\r\nimport { actionCreatorLike, actionCreatorDisLike } from '../../../../Redux/profile-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n     posts: state.profilePage.posts,\r\n     text: state.profilePage.text,\r\n   }\r\n   \r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n     setLike: (index) => {\r\n       dispatch(actionCreatorLike(index))\r\n     },\r\n     setDisLike: (index) => {\r\n       dispatch(actionCreatorDisLike(index))\r\n     } \r\n   }\r\n   \r\n}\r\n\r\nconst MapPostContainer = connect(mapStateToProps, mapDispatchToProps)(MapPost);\r\n\r\nexport default MapPostContainer;","import React from 'react'\r\nimport s from './SubscribeBtn.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SubscribeButton = (props) => {\r\n   let disable = props.disableSubscribeBtn.some(e => e === props.id)\r\n\r\n   if (!props.authorization) return <NavLink to='/login' className={s.btnFollow}>войти</NavLink>\r\n   return (\r\n      <>\r\n         {props.userFollowed\r\n            ? <button\r\n               disabled = {disable}\r\n               className={s.btnOnFollow}\r\n               onClick={() => props.unfollow(props.id)}\r\n            >{disable ? <i className=\"fa fa-spinner fa-pulse fa-fw\"></i> : 'отписаться'}</button>\r\n\r\n            : <button\r\n               disabled = {disable}\r\n               className={s.btnFollow}\r\n               onClick={() => props.follow(props.id)}\r\n            >{disable ? <i className=\"fa fa-spinner fa-pulse fa-fw\"></i> : 'Подписаться'}</button>\r\n         }\r\n      </>\r\n   )\r\n}\r\n\r\nexport default SubscribeButton;\r\n","import React from 'react';\r\nimport SubscribeButton from './SubscribeBtn';\r\nimport { connect } from 'react-redux';\r\nimport {unfollowThunk, followThunk} from '../../../Redux/users-reducer'\r\n\r\nclass SubscribeBtnContainer extends React.Component {\r\n\r\n   render() {\r\n      return (\r\n         <SubscribeButton {...this.props}/>\r\n      );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      disableSubscribeBtn: state.usersPage.disableSubscribeBtn,\r\n      authorization: state.auth.login,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   unfollow: unfollowThunk, \r\n   follow: followThunk,\r\n})(SubscribeBtnContainer)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__2L22a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"Settings_setting__3R-0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersPage\":\"Users_UsersPage__2v0Th\",\"btnShoeMore\":\"Users_btnShoeMore__3xNDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1Ukpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testAccount\":\"TestAccData_testAccount__7z0rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"AddPost_addPost__11wKw\"};","import {followedAPI, userAPI} from '../api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst NEW_POST = 'NEW-POST';\r\nconst LIKE = 'LIKE';\r\nconst DIS_LIKE = 'DIS-LIKE';\r\nconst USER_PROFILE = 'USER_PROFILE'\r\nconst SET_FOLLOWED_USER = 'SET-FOLLOWED-USER'\r\nconst GET_USER_STATUS = 'GET_USER_STATUS'\r\nconst CHANGE_MY_STATUS = 'CHANGE_MY_STATUS'\r\nconst SET_MY_PHOTOS = 'SET_MY_PHOTOS'\r\n\r\nlet initialState = {\r\n   User: {},\r\n   userStatus: null,\r\n   followedUser: null,\r\n   newPostText: '',\r\n   text: 0,\r\n      posts: [{\r\n            id: 1,\r\n            user: 'Andery',\r\n            message: 'Hello how are you?',\r\n            like: {\r\n               status: true,\r\n               count: 56,\r\n            },\r\n            disLike: {\r\n               status: false,\r\n               count: 3,\r\n            }\r\n         },\r\n         {\r\n            id: 2,\r\n            user: 'Dimon',\r\n            message: 'Hello! I am ok) And you?',\r\n            like: {\r\n               status: false,\r\n               count: 8,\r\n            },\r\n            disLike: {\r\n               status: false,\r\n               count: 0,\r\n            }\r\n         },\r\n         {\r\n            id: 3,\r\n            user: 'Ivan',\r\n            message: 'My first posts...',\r\n            like: {\r\n               status: false,\r\n               count: 5,\r\n            },\r\n            disLike: {\r\n               status: true,\r\n               count: 5,\r\n            }\r\n         },\r\n         {\r\n            id: 4,\r\n            user: 'Ivan',\r\n            message: 'Bye!',\r\n            like: {\r\n               status: false,\r\n               count: 2,\r\n            },\r\n            disLike: {\r\n               status: true,\r\n               count: 7,\r\n            }\r\n         }\r\n      ],\r\n}\r\n\r\nlet  PROFILE_REDUCER = (state = initialState, action) => {\r\n   switch(action.type){\r\n      case ADD_POST: \r\n         let newPost = {\r\n            id: Date.now(),\r\n            user: 'User name',\r\n            message: action.post,\r\n            like: {\r\n               status: false,\r\n               count: 0,\r\n            },\r\n            disLike: {\r\n               status: false,\r\n               count: 0,\r\n            }\r\n         }\r\n         return {\r\n            ...state,\r\n            posts: [newPost, ...state.posts ],\r\n         }\r\n      case NEW_POST: \r\n         return {\r\n            ...state,\r\n            newPostText: action.text,\r\n         }\r\n\r\n      case LIKE: \r\n         if (!state.posts[action.index].like.status) {\r\n              return {\r\n                 ...state,\r\n                 ...state.posts[action.index] = {\r\n                     ...state.posts[action.index], \r\n                     like: {\r\n                        status: true,\r\n                        count: state.posts[action.index].like.count + 1,\r\n                     },\r\n                     disLike: {\r\n                        status: false,\r\n                        count: state.posts[action.index].disLike.status === true \r\n                           ? state.posts[action.index].disLike.count - 1\r\n                           : state.posts[action.index].disLike.count,\r\n                     }\r\n                 },\r\n                 text: state.posts[action.index].like.count,\r\n              }\r\n         } else return {\r\n               ...state,\r\n               ...state.posts[action.index] = {\r\n                  ...state.posts[action.index],\r\n                  like: {\r\n                     status: false,\r\n                     count: state.posts[action.index].like.count - 1,\r\n                  },\r\n               },\r\n               text: state.posts[action.index].like.count,\r\n            }\r\n      case DIS_LIKE: \r\n         if (!state.posts[action.index].disLike.status) {\r\n              return {\r\n                 ...state,\r\n                 ...state.posts[action.index] = {\r\n                     ...state.posts[action.index], \r\n                     disLike: {\r\n                        status: true,\r\n                        count: state.posts[action.index].disLike.count + 1,\r\n                     },\r\n                     like: {\r\n                        status: false,\r\n                        count: state.posts[action.index].like.status === true \r\n                           ? state.posts[action.index].like.count - 1\r\n                           : state.posts[action.index].like.count,\r\n                     }\r\n                 },\r\n                 text: state.posts[action.index].disLike.count,\r\n              }\r\n         } else return {\r\n               ...state,\r\n               ...state.posts[action.index] = {\r\n                  ...state.posts[action.index],\r\n                  disLike: {\r\n                     status: false,\r\n                     count: state.posts[action.index].disLike.count - 1,\r\n                  },\r\n                  \r\n               },\r\n               text: state.posts[action.index].disLike.count,\r\n            }\r\n      case USER_PROFILE:\r\n         return {\r\n            ...state,\r\n            User: {...action.user}\r\n         }\r\n      case SET_FOLLOWED_USER:\r\n         return {\r\n            ...state,\r\n            followedUser: action.follow\r\n         }\r\n      case 'FOLLOWED_TOGLE':\r\n         return {\r\n            ...state,\r\n            followedUser: state.followedUser = !state.followedUser\r\n         }\r\n      case GET_USER_STATUS:\r\n         return {\r\n            ...state,\r\n            userStatus: action.status\r\n         }      \r\n      case CHANGE_MY_STATUS:\r\n         return {\r\n            ...state,\r\n            userStatus: action.status,\r\n         }\r\n      case SET_MY_PHOTOS:\r\n         return{\r\n            ...state,\r\n            User: {...state.User, photos: {...action.photos}}\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport let actionCreatorAddPost = (post) => ({\r\n   type: ADD_POST,\r\n   post,\r\n})\r\nexport let actionCreatorChangePost = (text) => ({\r\n   type: NEW_POST,\r\n   text: text,\r\n})\r\nexport let actionCreatorLike = (index) => ({\r\n   type: 'LIKE',\r\n   index: index,\r\n})\r\nexport let actionCreatorDisLike = (index) => ({\r\n   type: 'DIS-LIKE',\r\n   index: index,\r\n})\r\nexport let setUserProfile = (user) => ({\r\n   type: 'USER_PROFILE',\r\n   user: user,\r\n})\r\nexport let setFollowedUser = (follow) => ({\r\n   type: 'SET-FOLLOWED-USER',\r\n   follow,\r\n})\r\nexport let FollowToggle = () => ({\r\n   type: 'FOLLOWED_TOGLE',\r\n})\r\nexport let UserStatus = (status) => ({\r\n   type: 'GET_USER_STATUS',\r\n   status\r\n})\r\nexport let changeValueMyStatus = (status) => ({\r\n   type: 'CHANGE_MY_STATUS',\r\n   status,\r\n})\r\nlet setMyPhotos = (photos) => ({\r\n   type: 'SET_MY_PHOTOS',\r\n   photos,\r\n})\r\n\r\nexport const getUserProfileThankCreator= (userId) => (dispatch) => {\r\n      userAPI.getUserProfile(userId).then(data => dispatch(setUserProfile(data)));\r\n   }\r\n\r\nexport const getFollowThankCreator= (userId) => (dispatch) => {\r\n      followedAPI.getFollow(userId).then(data => dispatch(setFollowedUser(data)));\r\n   }\r\n\r\nexport const getUserStatus= (userId) =>  (dispatch) => {\r\n      userAPI.getUserStatus(userId).then(data => dispatch(UserStatus(data)));\r\n   }\r\n\r\nexport const saveMyPhotoTC= (photo) => (dispatch) => {\r\n      userAPI.putMyPhoto(photo).then(data => {\r\n         if(data.resultCode === 0){\r\n            dispatch(setMyPhotos(data.data.photos))\r\n         }\r\n      })\r\n   }\r\n\r\nexport default PROFILE_REDUCER;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"LoginForm_email__37VvK\",\"emailError\":\"LoginForm_emailError__3RKX3\",\"messageError\":\"LoginForm_messageError__3rGNQ\"};","import {followedAPI, userAPI} from '../api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_PAGE = 'SET-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst DISABLE_SUBSCRIBE_BTN = 'DISABLE_SUBSCRIBE_BTN'\r\n\r\nlet initialState = {\r\n   users: [],\r\n   numberOfPages: 1,\r\n   numberOfUsers: 6,\r\n   totalUsersCount: 0,\r\n   isFetching: false,\r\n   portitionSize: 10,\r\n   disableSubscribeBtn: []\r\n}\r\n\r\nlet USERS_REDUCER = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW: \r\n         return {\r\n            ...state,\r\n            users: state.users.map(e => {\r\n               if (e.id === action.id ) {\r\n                  return {...e, followed: true}\r\n               }\r\n               return e\r\n            })\r\n         }                \r\n      case UNFOLLOW: \r\n         return {\r\n            ...state,\r\n            users: state.users.map(e => {\r\n               if (e.id === action.id ) {\r\n                  return {...e, followed: false}\r\n               }\r\n               return e\r\n            })\r\n         };\r\n      case SET_USERS:\r\n         return {\r\n            ...state,\r\n            users: action.users\r\n         }               \r\n      case SET_PAGE:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            numberOfPages: action.page\r\n         }               \r\n      case SET_TOTAL_COUNT:\r\n         return {\r\n            ...state,\r\n            totalUsersCount: action.totalCount\r\n         }                            \r\n      case IS_FETCHING:\r\n         return {\r\n            ...state,\r\n            isFetching: action.isFetching,\r\n         }                            \r\n      case DISABLE_SUBSCRIBE_BTN:\r\n         return {\r\n            ...state,\r\n            disableSubscribeBtn: action.isFeatching \r\n               ?  [...state.disableSubscribeBtn, action.userId] \r\n               :  state.disableSubscribeBtn.filter(id => id !== action.userId) \r\n               \r\n         }                            \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport let follow = (id) => {\r\n   return {\r\n      type: 'FOLLOW',\r\n      id: id,\r\n   }\r\n}\r\nexport let unfollow = (id) => {\r\n   return {\r\n      type: 'UNFOLLOW',\r\n      id: id,\r\n   }\r\n}\r\nexport let setUsers = (users) => {\r\n   return {\r\n      type: 'SET-USERS',\r\n      users: users,\r\n   }\r\n}\r\nexport let setPage = (page) => {\r\n   return {\r\n      type: 'SET-PAGE',\r\n      page: page,\r\n   }\r\n}\r\nexport let setTotalCount = (number) => {\r\n   return {\r\n      type: 'SET-TOTAL-COUNT',\r\n      totalCount: number,\r\n   }\r\n}\r\nexport let isFetching = (isFetching) => {\r\n   return {\r\n      type: 'IS_FETCHING',\r\n      isFetching,\r\n   }\r\n}\r\nexport let disableBtn = (userId, isFeatching) => {\r\n   return {\r\n      type: 'DISABLE_SUBSCRIBE_BTN',\r\n      userId, isFeatching\r\n\r\n   }\r\n}\r\n\r\nexport const getUsersThankCreator = (numberOfPages, numberOfUsers) => {\r\n   return (dispatch) => {\r\n      dispatch(isFetching(true))\r\n      userAPI.getUsers(numberOfPages, numberOfUsers).then(data => {\r\n         dispatch(setUsers(data.items))\r\n         dispatch(setTotalCount(data.totalCount))\r\n         dispatch(isFetching(false))\r\n      })\r\n   }\r\n}\r\n\r\nexport const unfollowThunk = (id) => {\r\n   return (dispatch) => {\r\n      dispatch(disableBtn(id, true))\r\n      followedAPI.deleteFollow(id).then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(unfollow(id))\r\n         }\r\n         dispatch(disableBtn(id, false))\r\n      })\r\n   }\r\n}\r\nexport const followThunk = (id) => {\r\n   return (dispatch) => {\r\n      dispatch(disableBtn(id, true))\r\n      followedAPI.postFollow(id).then(data => {\r\n         if (data.resultCode === 0) {\r\n            dispatch(follow(id))\r\n         }\r\n         dispatch(disableBtn(id, false))\r\n      }) \r\n   }\r\n}\r\n\r\nexport default USERS_REDUCER;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2sLwg\",\"active\":\"Nav_active__1MyEJ\",\"setting\":\"Nav_setting__2pp3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsPost\":\"NewsPost_newsPost__3r_7r\",\"content\":\"NewsPost_content__1E3DO\",\"img\":\"NewsPost_img__XeHrM\",\"linkToSource\":\"NewsPost_linkToSource__3N66m\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { newsAPI } from '../api'\r\n\r\nconst NEWS_COUNTRY_TOP_HEADLINES = 'NEWS_COUNTRY_TOP_HEADLINES'\r\n\r\nlet initialState = {\r\n\tMainNews: [],\r\n}\r\n\r\nlet NEWS_REDUCER = function (state = initialState, action) {\r\n\tswitch(action.type){\r\n\t\tcase NEWS_COUNTRY_TOP_HEADLINES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tMainNews: [...action.news]\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nlet setNewsCountryHeadlines = (news) => ({\r\n\ttype: NEWS_COUNTRY_TOP_HEADLINES,\r\n\tnews,\r\n})\r\n\r\nexport let NewsCountryHeadlinesTC = (news) => (dispatch) =>{\r\n\t\r\n\tnewsAPI.getNewsSearch(news).then(response => {\r\n\t\tif(response.status){\r\n\t\t\tdispatch(setNewsCountryHeadlines(response.data.articles))\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nexport default NEWS_REDUCER;","import { getAuthMe, postLogin, deleteLogin } from '../api'\r\nimport { stopSubmit } from 'redux-form'\r\nconst SET_AUTH_DATA = 'SET_AUTH_DATA'\r\nconst LOGIN_SET_ME_ID = 'LOGIN_SET_ME_ID'\r\nconst LOGOUT = 'LOGOUT'\r\n\r\nlet initialState = {\r\n   id: null,\r\n   login: null,\r\n   email: null,\r\n   messages: null,\r\n   isAuth: false,\r\n}\r\n\r\nlet AUTH_REDUCER = function (state = initialState, action) {\r\n   switch (action.type) {\r\n      case SET_AUTH_DATA:\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n            isAuth: true, \r\n         }\r\n      case LOGIN_SET_ME_ID:\r\n         return {\r\n            ...state,\r\n            id: action.id,\r\n            messages: action.messages,\r\n            isAuth: action.isAuth,\r\n         }\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            id: action.id,\r\n            login: null,\r\n            email: null,\r\n            messages: action.messages,\r\n            isAuth: action.isAuth,\r\n         }\r\n      default:\r\n         break;\r\n   }\r\n   return state;\r\n}\r\n\r\nexport let setAuthData = (data) => ({\r\n   type: SET_AUTH_DATA,\r\n   data: data, \r\n})\r\nlet loginSetMeId = (id, messages, isAuth) => ({\r\n   type: LOGIN_SET_ME_ID,\r\n   id, messages, isAuth\r\n})\r\nlet logout = (id, messages, isAuth) => ({\r\n   type: LOGOUT,\r\n   id, messages, isAuth\r\n})\r\n\r\nexport const authMeThankCreator = () => {\r\n   return (dispatch) => {\r\n      getAuthMe().then(data => {\r\n            if (data.resultCode === 0) {\r\n               dispatch(setAuthData({...data.data})) \r\n            }\r\n         })\r\n   }\r\n}\r\n\r\nexport const loginThankCreator = (email, password, rememberMe) => (dispatch) => {\r\n   postLogin(email, password, rememberMe).then(response => {\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(loginSetMeId(response.data.data.userId, response.data.messages, true))\r\n         getAuthMe().then(data => {\r\n            if (data.resultCode === 0) {\r\n               dispatch(setAuthData({...data.data}))\r\n            }\r\n         })\r\n      }\r\n      else{\r\n         dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\r\n      }\r\n   })\r\n}\r\nexport const logoutThankCreator = () => (dispatch) => {\r\n   deleteLogin().then(response => {\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(logout(null, null, false))\r\n      }\r\n   })\r\n}\r\n\r\nexport default AUTH_REDUCER;","let initialState = {\r\n   text: 'Settings Page in the development'\r\n}\r\n\r\nlet SETTING_REDUSER = (state = initialState, action) => {\r\n   switch(action.type){\r\n      default: \r\n         return state\r\n\r\n   }\r\n}\r\n\r\nexport default SETTING_REDUSER","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport profilePage from './profile-reducer'\r\nimport messagePage from './message-reducer'\r\nimport newsPage from './news-reducer'\r\nimport usersPage from './users-reducer'\r\nimport auth from './auth-reducer'\r\nimport settingPage from './settings-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n   profilePage,\r\n   messagePage,\r\n   settingPage,   \r\n   usersPage,\r\n   newsPage,\r\n   auth,\r\n   form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Nav.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () =>  {\r\n   return (\r\n      <nav className={s.nav}>\r\n         <ul>\r\n            <NavLink teg=\"li\" to=\"/Myprofile\" activeClassName={s.active}>Моя страница</NavLink>\r\n            <NavLink to=\"/message\" activeClassName={s.active}>Сообщения</NavLink>\r\n            <NavLink to=\"/news\" activeClassName={s.active}>Новости</NavLink>\r\n            <NavLink to=\"/music\" activeClassName={s.active}>Музыка</NavLink>\r\n            <NavLink to=\"/users\" activeClassName={s.active}>Пользователи</NavLink>\r\n            <NavLink to=\"/setting\" className={s.setting} activeClassName={s.active}>\r\n               <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>Настройки\r\n            </NavLink>\r\n         </ul>\r\n      </nav>\r\n   )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n   return ( \r\n      <footer className=\"footer\">\r\n         \r\n      </footer>\r\n   )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport style from './NewsPost.module.scss'\r\n\r\nconst NewsPost = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.news.map((news, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={news.publishedAt + i} className={style.newsPost}>\r\n\t\t\t\t\t\t<h3 className={style.newsPost__title}><span>{i + 1}. </span>{news.title}</h3>\r\n\t\t\t\t\t\t<div className={style.content}>\r\n\t\t\t\t\t\t\t<a href={news.url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n\t\t\t\t\t\t\t\t<img src={news.urlToImage} alt=\"img\" className={style.img}/>\r\n\t\t\t\t\t\t\t</a> \r\n\t\t\t\t\t\t\t<div className={style.text}>{news.description}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p \r\n\t\t\t\t\t\t\tclassName={style.newsPost__author}>\r\n\t\t\t\t\t\t\t<b>Автор: </b>{news.author ? news.author : 'не указан'}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<i className={style.newsPost__date}><b>Дата: </b>{news.publishedAt.replace(/[a-z]/gi, ' ')}</i>\r\n\t\t\t\t\t\t<div className={style.linkToSource}>\r\n\t\t\t\t\t\t\t<b>Читать на: </b>\r\n\t\t\t\t\t\t\t<a href={news.url} target=\"_blank\" rel=\"noreferrer noopener\">{news.source.name}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewsPost;\r\n","import React from 'react';\r\nimport style from './News.module.scss'\r\nimport NewsPost from './NewsPost/NewsPost';\r\n\r\nconst News = (props) => {\r\n   return ( \r\n      <div className={style.News}>\r\n         <NewsPost news={props.news}/>\r\n      </div>         \r\n   )\r\n}\r\n\r\nexport default News;","import React, { useEffect } from 'react';\r\nimport News from './News';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { NewsCountryHeadlinesTC} from '../../Redux/news-reducer'\r\n\r\nconst NewsContainer = (props) => {\r\n   useEffect(() => {\r\n      let getNews = (newsTC) => {\r\n         return newsTC()\r\n      }\r\n      getNews(props.NewsCountryHeadlinesTC)\r\n   }, [props.NewsCountryHeadlinesTC])\r\n\r\n   return <News {...props}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   news: state.newsPage.MainNews,\r\n})\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      NewsCountryHeadlinesTC,\r\n   })\r\n)(NewsContainer)\r\n","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nconst Music = () => {\r\n   return ( \r\n   <div className={s.music}>\r\n      <h1>Music</h1>\r\n   </div>\r\n   )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.scss'\r\n\r\n\r\nconst Setting = (props) => {\r\n   return ( \r\n   <div className = {s.setting} >\r\n      <h1>{props.text}</h1>\r\n   </div>\r\n   )\r\n}\r\n\r\nexport default Setting;","import React from 'react';\r\nimport Setting from './Settings';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst SettingsContainer = (props) => {\r\n   return <Setting {...props} />\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   text: state.settingPage.text\r\n})\r\n\r\n\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, {\r\n\r\n   }),\r\n)(SettingsContainer)\r\n","import React from 'react';\r\nimport s from './UserCard.module.scss';\r\nimport avatar from '../../../assets/Image/ava.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport SubscribeBtnContainer from '../../module/SubscribeButton/SubscribeBtnContainer'\r\n\r\nconst UserCard = (props) => {\r\n   return (\r\n      <div>\r\n         {props.users.map(e => {\r\n         return (\r\n            <div key={e.id} className={s.user}>\r\n               <NavLink to={\"/profile/\" + e.id} >\r\n                  <img \r\n                     src = {e.photos.small != null ? e.photos.small : avatar}\r\n                     alt=\"avatar\" \r\n                     className={s.avatar}\r\n                  />\r\n               </NavLink>\r\n\r\n                  <div className={s.user__content}>\r\n                  <h2>{e.name}</h2>\r\n                     <p>{e.status}</p>\r\n                  </div>\r\n               <SubscribeBtnContainer \r\n                     id={e.id}\r\n                     userFollowed={e.followed}\r\n                  />\r\n            </div>\r\n         )\r\n   })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UserCard;\r\n","import React, { useState } from 'react';\r\nimport style from './Pagination.module.scss'\r\n\r\nconst Pagination = (props) => {\r\n   let pagination = Math.ceil(props.totalUsersCount / props.numberOfUsers);\r\n   let pages = []\r\n   for (let i = 1; i <= pagination; i++) {\r\n      pages.push(i)\r\n   }\r\n\r\n   let portitionCount = Math.ceil(pagination / props.portitionSize)\r\n   let [PortitionNumber, setPortitionNamber] = useState(1)\r\n   let leftPortition = (PortitionNumber - 1) * props.portitionSize + 1\r\n   let rigthPortition = PortitionNumber * props.portitionSize\r\n\r\n   return (\r\n      <div className={style.pagination}>\r\n         {PortitionNumber > 1 &&\r\n            <button \r\n               className={style.prev}\r\n               onClick={() => { setPortitionNamber(PortitionNumber - 1) }}\r\n            >&larr;</button>\r\n         }\r\n            {\r\n               pages\r\n                  .filter(p => p >= leftPortition && p <= rigthPortition)\r\n                  .map(e => {\r\n                     return <span\r\n                        key={e}\r\n                        className={props.numberOfPages === e ? style.pagination__pageActive : style.pagination__page}\r\n                        onClick={() => { props.onSetPage(e) }}\r\n                     >{e}</span>\r\n                  })\r\n            }\r\n\r\n         {portitionCount > PortitionNumber &&\r\n            <button \r\n            className={style.next}\r\n               onClick={() => { setPortitionNamber(PortitionNumber + 1) }}\r\n            >&rarr;</button>\r\n         }\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport UserCard from './UserCard/UserCard';\r\nimport style from './Users.module.scss';\r\nimport Preloader from '../module/preloader';\r\nimport Pagination from './Pagination/Pagination';\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n      return (\r\n         <div className={style.UsersPage}>\r\n            {props.fetching\r\n               ? <Preloader />\r\n               : <UserCard\r\n                     users={props.users}\r\n                     follow={props.follow}\r\n                     unfollow={props.unfollow}\r\n                     disableSubscribeBtn={props.disableSubscribeBtn}\r\n                     disableBtn={props.disableBtn}\r\n                  />\r\n            }\r\n            \r\n            <Pagination \r\n               onSetPage={props.onSetPage} \r\n               numberOfPages={props.numberOfPages}\r\n               totalUsersCount={props.totalUsersCount}\r\n               numberOfUsers={props.numberOfUsers}\r\n               portitionSize={props.portitionSize}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n\r\n   export default Users;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport {\r\n   isFetching,\r\n   setPage,\r\n   getUsersThankCreator,\r\n} from '../../Redux/users-reducer';\r\n\r\nclass UsersContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.getUsers(this.props.numberOfPages, this.props.numberOfUsers)\r\n   }\r\n\r\n   onSetPage = (page) => { \r\n      this.props.getUsers(page, this.props.numberOfUsers)\r\n      this.props.setPage(page);\r\n   }  \r\n\r\n   render() {  \r\n         return <Users \r\n                  users={this.props.users}\r\n                  numberOfPages={this.props.numberOfPages}\r\n                  numberOfUsers={this.props.numberOfUsers}\r\n                  totalUsersCount={this.props.totalUsersCount}\r\n                  onSetPage={this.onSetPage}\r\n                  fetching={this.props.fetching}\r\n                  portitionSize={this.props.portitionSize}\r\n               />\r\n            }\r\n}\r\n\r\nconst mapStateToProps = (state) => { \r\n   return {\r\n      text: state.usersPage.text,\r\n      users: state.usersPage.users,\r\n      numberOfPages: state.usersPage.numberOfPages,\r\n      numberOfUsers: state.usersPage.numberOfUsers,\r\n      totalUsersCount: state.usersPage.totalUsersCount,\r\n      fetching: state.usersPage.isFetching,\r\n      portitionSize: state.usersPage.portitionSize,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    isFetching, setPage,\r\n   getUsers: getUsersThankCreator,\r\n})(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.scss'\r\nimport { NavLink } from 'react-router-dom';\r\nimport avatar from '../../assets/Image/ava.jpg'\r\n\r\nconst Header = (props) => {\r\n\tlet Logout = () => {\r\n\t\tprops.logout()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t<div className={s.ExitIco}>\r\n\t\t{\r\n\t\t\tprops.isAuth && \r\n\t\t\t<NavLink to='./login' onClick={Logout} className=\"fa fa-sign-out fa-3x\"></NavLink>\r\n\t\t}\r\n\t\t</div>\r\n\r\n\t\t<div className={s.login}>\r\n\t\t{props.isAuth && \r\n\t\t\t<NavLink to='./login' className={s.logoutBtn} onClick={Logout}>Выйти</NavLink>\t\r\n\t\t}\r\n\t\t\t{!props.isAuth\r\n\t\t\t\t? \t<NavLink to='/login' className={s.login__link}>Login</NavLink>\r\n\t\t\t\t: \t<div className={s.login__nik}>\r\n\t\t\t\t\t\t<NavLink to='/Myprofile'>{props.login}</NavLink>\r\n\t\t\t\t\t\t<img src={{...props.myPhoto}.small || avatar} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n     \t\t}\r\n\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {authMeThankCreator, logoutThankCreator} from '../../Redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.authMe()\r\n   }\r\n   render() {\r\n      return (\r\n         <Header {...this.props.data} \r\n            logout={this.props.logoutThankCreator}\r\n            isAuth = {this.props.isAuth}\r\n            login = {this.props.login}\r\n            myPhoto={this.props.myPhoto}\r\n         />\r\n      );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n      login: state.auth.login,\r\n      myPhoto: state.profilePage.User.photos\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   authMe: authMeThankCreator,\r\n   logoutThankCreator,\r\n})(HeaderContainer)\r\n","import React from 'react';\r\nimport style from './LoginForm.module.scss'\r\n\r\nconst EmailInput = ({input, meta, ...props}) => {\r\n   const dirty = !meta.dirty && meta.touched;\r\n   const error = meta.error && meta.touched\r\n   return (\r\n   <div className={error || dirty ? style.emailError : style.email}>\r\n      <input {...input} {...props}/>\r\n      {error &&\r\n         <p className={style.messageError}>{meta.error}</p>\r\n      }\r\n      {dirty &&\r\n         <p className={style.messageError}>Поле не должно быть пустым</p>\r\n      }\r\n   </div>\r\n   )\r\n}\r\n\r\nexport default EmailInput;\r\n","import React from 'react';\r\nimport style from './LoginForm.module.scss'\r\n\r\nconst Password = ({ input, meta, ...props }) => {\r\n   const dirty = !meta.dirty && meta.touched;\r\n   const error = meta.error && meta.touched;\r\n   return (\r\n      <div className={error || dirty ? style.emailError : style.email}>\r\n         <input {...input} {...props} />\r\n         {error &&\r\n            <p className={style.messageError}>{meta.error}</p>\r\n         }\r\n         {dirty &&\r\n            <p className={style.messageError}>Поле не должно быть пустым</p>\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport './LoginForm.scss'\r\nimport EmailInput from '../../module/LoginForm/EmailInput';\r\nimport Password from '../../module/LoginForm/Password';\r\nimport { email, maxLength500, minLength4 } from '../../utils/validators/Validator';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n   if (props.isAuth) {\r\n   return   <Redirect to='/Myprofile'></Redirect>\r\n   }\r\n  \r\n   return (\r\n      <div>\r\n         <form onSubmit={props.handleSubmit} className='login-form'>\r\n            <div className=\"flex-row\">\r\n               <label className=\"lf--label\" htmlFor=\"email\">\r\n                  <svg x=\"0px\" y=\"0px\" width=\"12px\" height=\"13px\">\r\n                     <path fill=\"#B1B7C4\" d=\"M8.9,7.2C9,6.9,9,6.7,9,6.5v-4C9,1.1,7.9,0,6.5,0h-1C4.1,0,3,1.1,3,2.5v4c0,0.2,0,0.4,0.1,0.7 C1.3,7.8,0,9.5,0,11.5V13h12v-1.5C12,9.5,10.7,7.8,8.9,7.2z M4,2.5C4,1.7,4.7,1,5.5,1h1C7.3,1,8,1.7,8,2.5v4c0,0.2,0,0.4-0.1,0.6 l0.1,0L7.9,7.3C7.6,7.8,7.1,8.2,6.5,8.2h-1c-0.6,0-1.1-0.4-1.4-0.9L4.1,7.1l0.1,0C4,6.9,4,6.7,4,6.5V2.5z M11,12H1v-0.5 c0-1.6,1-2.9,2.4-3.4c0.5,0.7,1.2,1.1,2.1,1.1h1c0.8,0,1.6-0.4,2.1-1.1C10,8.5,11,9.9,11,11.5V12z\" />\r\n                  </svg>\r\n               </label>\r\n               <Field \r\n                  id='email' \r\n                  className='lf--input' \r\n                  type=\"email\" placeholder='email:' \r\n                  name='email' \r\n                  component={EmailInput}\r\n                  validate={[email]} \r\n               />\r\n            </div>\r\n            <div className=\"flex-row\">\r\n               <label className=\"lf--label\" htmlFor=\"password\">\r\n                  <svg x=\"0px\" y=\"0px\" width=\"15px\" height=\"5px\">\r\n                     <g>\r\n                        <path fill=\"#B1B7C4\" d=\"M6,2L6,2c0-1.1-1-2-2.1-2H2.1C1,0,0,0.9,0,2.1v0.8C0,4.1,1,5,2.1,5h1.7C5,5,6,4.1,6,2.9V3h5v1h1V3h1v2h1V3h1 V2H6z M5.1,2.9c0,0.7-0.6,1.2-1.3,1.2H2.1c-0.7,0-1.3-0.6-1.3-1.2V2.1c0-0.7,0.6-1.2,1.3-1.2h1.7c0.7,0,1.3,0.6,1.3,1.2V2.9z\" />\r\n                     </g>\r\n                  </svg>\r\n               </label>\r\n               <Field \r\n                  id='password' \r\n                  className='lf--input' \r\n                  type=\"password\" \r\n                  placeholder='password' \r\n                  name='password' \r\n                  component={Password} \r\n                  validate={[maxLength500, minLength4]}\r\n               />\r\n            </div>\r\n            <Field \r\n               id='rememberMe' \r\n               type=\"checkbox\" \r\n               name='rememberMe' \r\n               component='input' \r\n            />      \r\n            <label className=\"checkBox\" htmlFor=\"rememberMe\">запомнить меня</label>\r\n            <button className='lf--submit'>submit</button>    \r\n            {\r\n               props.error && <div className=\"formError\"><p>{props.error}</p></div>\r\n            }\r\n         </form>\r\n      </div>\r\n\r\n   );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n   form: 'login'\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm;\r\n","import React from 'react';\r\nimport style from './TestAccData.module.scss'\r\n\r\nconst TestAccountData = () => {\r\n   return (\r\n      <div className={style.testAccount}>\r\n         <h4>Данные тестового аккаунта:</h4>\r\n         <p><strong>Email: </strong> free@samuraijs.com</p>\r\n         <p><strong>Password: </strong> free</p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TestAccountData;\r\n","import React from 'react';\r\nimport style from './Login.module.scss'\r\nimport LoginReduxForm from './LoginForm';\r\nimport TestAccountData from '../TestAccountData';\r\n\r\nconst Login = (props) => {\r\n   let submitLogin = (value) => {\r\n      props.loginThankCreator(value.email, value.password, value.rememberMe)\r\n   }\r\n   return (\r\n      <div className={style.Login}>\r\n         <TestAccountData />\r\n         <h3>Авторизация</h3>\r\n         <LoginReduxForm onSubmit={submitLogin} isAuth={props.isAuth}/>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from './Login';\r\nimport {loginThankCreator} from '../../../Redux/auth-reducer';\r\n\r\nconst LoginContainer = (props) => {\r\n   return <Login {...props}/>; \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   loginThankCreator\r\n})(LoginContainer)\r\n","import React, { useState } from 'react';\r\nimport '../MyProfile.scss'\r\nimport { userAPI } from '../../../../api';\r\n\r\nconst UserStatus = (props) => {\r\n   let input = React.createRef()\r\n   let [edidMode, setEdidMode] = useState(true)\r\n   let setMyStatus = () => {\r\n      setEdidMode(true)\r\n      userAPI.putMyStatus({ status: `${props.myStatus}` })\r\n   }\r\n   let changeMyStatus = () => {\r\n      props.changeValueMyStatus(input.current.value)\r\n   }\r\n   return (\r\n      <>\r\n         {edidMode\r\n            ? <div className='MyStatus' >\r\n               {props.status === null\r\n                  ? <i>без статуса</i>\r\n                  : <h5>{props.myStatus}</h5>\r\n               }\r\n               <i\r\n                  className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"\r\n                  onClick={() => setEdidMode(false)}\r\n               ></i>\r\n            </div>\r\n            : <input\r\n               ref={input}\r\n               type=\"text\"\r\n               value={props.myStatus}\r\n               onChange={() => changeMyStatus()}\r\n               autoFocus={true}\r\n               onBlur={() => setMyStatus()}\r\n\r\n            />\r\n         }\r\n\r\n      </>\r\n   );\r\n}\r\n\r\nexport default UserStatus;\r\n","import React from 'react';\r\nimport UserStatus from './UserStatus';\r\nimport '../MyProfile.scss'\r\n\r\nconst UserInfo = (props) => {\r\n   return (\r\n      <div className=\"UserInform\">\r\n         <h5 className='UserInform__name'>{props.fullName}</h5>\r\n         <div className=\"UserInform__status\">\r\n            <UserStatus\r\n               myStatus={props.myStatus}\r\n               setMyStatus={props.setMyStatus}\r\n               changeValueMyStatus={props.changeValueMyStatus}\r\n            />\r\n         </div>\r\n         <div className=\"UserInform__data\">\r\n            <div className=\"UserInform__data-email\">\r\n               <p>Email:</p>\r\n               <a href={`mailto:${props.email}`}>{props.email}</a>\r\n            </div>\r\n            <div className=\"UserInform__data-phone\">\r\n               <p>Телефон:</p>\r\n               <a href='tel:+380123456789'>+380123456789</a>\r\n            </div>            \r\n            <div className=\"UserInform__data-phone\">\r\n               <p>Семейное положение:</p>\r\n\r\n            </div>\r\n            <div className=\"UserInform__data-phone\">\r\n               <p>Робота:</p>\r\n\r\n            </div>\r\n            <div className=\"UserInform__data-phone\">\r\n               <p>Образование:</p>\r\n\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UserInfo;\r\n","import React from 'react';\r\n\r\nconst AddAvatarSVG = () => {\r\n   return (\r\n      <div className='AddAvatarSVG'>\r\n         <svg version=\"1.1\" id=\"Capa_1\" viewBox=\"0 0 512 512\">\r\n            <path d=\"M213.333,0c-70.592,0-128,57.408-128,128v42.667c0,26.411,8.043,50.965,21.803,71.381C43.221,278.912,0,347.733,0,426.667\r\n         V448c0,35.285,28.715,64,64,64h192c11.797,0,21.333-9.557,21.333-21.333s-9.536-21.333-21.333-21.333H64\r\n         c-11.776,0-21.333-9.579-21.333-21.333v-21.333c0-66.965,38.784-125.013,95.061-152.939\r\n         c21.227,15.595,47.317,24.939,75.605,24.939c70.592,0,128-57.408,128-128V128C341.333,57.408,283.925,0,213.333,0z\r\n            M298.667,170.667c0,47.061-38.272,85.333-85.333,85.333S128,217.728,128,170.667V128c0-47.061,38.272-85.333,85.333-85.333\r\n         c47.061,0,85.333,38.272,85.333,85.333V170.667z\"/>\r\n            <path d=\"M490.667,362.667h-85.333v-85.333c0-11.776-9.536-21.333-21.333-21.333c-11.797,0-21.333,9.557-21.333,21.333v85.333\r\n         h-85.333C265.536,362.667,256,372.224,256,384s9.536,21.333,21.333,21.333h85.333v85.333c0,11.776,9.536,21.333,21.333,21.333\r\n         c11.797,0,21.333-9.557,21.333-21.333v-85.333h85.333c11.797,0,21.333-9.557,21.333-21.333S502.464,362.667,490.667,362.667z\"/>\r\n         </svg>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AddAvatarSVG;\r\n","import React from 'react';\r\nimport img from '../../../../assets/Image/ava.jpg'\r\nimport AddAvatarSVG from '../../../module/SVG/AddAvatar';\r\n\r\nconst UserAvatar = (props) => {\r\n   \r\n   let onMyPhoto = (e) => {\r\n      props.saveMyPhotoTC(e.target.files[0])\r\n   }\r\n\r\n   return (\r\n      <div className='MyPhotoWrapper'>\r\n         {\r\n            !props.photoLarge\r\n               ? <img src={img} alt=\"avatar\" className=\"MyAvatar\" />\r\n               : <img src={props.photoLarge} alt=\"avatar\" className=\"MyAvatar\" />\r\n         }\r\n         <input type=\"file\" id=\"inputPhoto\" onChange={onMyPhoto} />\r\n         <label htmlFor=\"inputPhoto\"><AddAvatarSVG /></label>\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default UserAvatar;\r\n","import React from 'react';\r\nimport './MyProfile.scss';\r\nimport AddPostContainer from '../Posts/AddPost/AddPostContainer';\r\nimport MapPostContainer from '../Posts/MapPosts/MapPostContainer';\r\n\r\nimport UserInfo from './UserInformation/UserInfo';\r\nimport UserAvatar from './UserInformation/UserAvatar';\r\n\r\nconst MyProfile = (props) => {\r\n\r\n   return (\r\n      <div className=\"MyProfile\">\r\n         <div className=\"MyProfile__user\">\r\n            <UserAvatar \r\n               photoLarge={{ ...props.user.photos }.large}\r\n               saveMyPhotoTC={props.saveMyPhotoTC}\r\n            />\r\n            <UserInfo                      \r\n               myStatus={props.myStatus}\r\n               setMyStatus={props.setMyStatus}\r\n               changeValueMyStatus={props.changeValueMyStatus}\r\n               fullName={props.user.fullName}\r\n               email={props.email}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"MyProfile__posts\" >\r\n            <AddPostContainer />\r\n            <MapPostContainer />\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MyProfile;\r\n","import React from 'react';\r\nimport MyProfile from './MyProfile';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getUserProfileThankCreator, getUserStatus, changeValueMyStatus, saveMyPhotoTC } from '../../../Redux/profile-reducer';\r\nimport { authMeThankCreator } from '../../../Redux/auth-reducer';\r\nimport Preloader from '../../module/preloader'\r\nimport { getAuthMe } from '../../../api';\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect';\r\n\r\nclass MyProfileContainer extends React.Component {    \r\n      state = {\r\n         preloader: true,\r\n      }\r\n   componentDidMount(){\r\n      getAuthMe().then(response => {\r\n         if (response.resultCode === 0) {\r\n            this.props.getMyProfile(response.data.id)\r\n            this.props.getUserStatus(response.data.id)\r\n            this.setState({preloader: false})\r\n         }\r\n      })\r\n   }\r\n\r\n   render() {     \r\n      if (this.state.preloader) {\r\n         return <Preloader />\r\n      }\r\n      return <MyProfile {...this.props}/>\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      user: state.profilePage.User,\r\n      myStatus: state.profilePage.userStatus,\r\n      email: state.auth.email,\r\n      fulfilled: state.auth.fulfilled,\r\n   }\r\n}\r\n\r\n\r\nexport default compose(\r\n   withRouter,\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, {\r\n      getMyProfile: getUserProfileThankCreator,\r\n      authMeThankCreator, getUserStatus, changeValueMyStatus, saveMyPhotoTC\r\n   }),\r\n)(MyProfileContainer)\r\n","import React from 'react';\r\nimport Preloader from '../components/module/preloader';\r\n\r\nexport let whitSuspense = (Component) => {\r\n   return (props) => {\r\n      return (\r\n         <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n         </React.Suspense>\r\n      )\r\n   }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Nav from './components/Nav/Nav'\nimport Footer from './components/Footer/Footer';\nimport News from './components/News/NewsContainer';\nimport Music from './components/Music/Music';\nimport Setting from './components/Settings/SettingsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Authorization/Login/LoginContainer';\nimport MyProfileContainer from './components/Profile/MyProfile/MyProfileContainer';\nimport { whitSuspense } from './hoc/withSuspense';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/Profile.container')) ;\nconst MessageContainer = React.lazy(() => import('./components/Message/MessageContainer'));\n\nfunction App(props) {\n   return (\n      <HashRouter>\n         <div className=\"App\">\n            <HeaderContainer />\n            <Nav />\n            <div className=\"mainContent\">\n               <Route \n                  path='/login'\n                  render={() => <LoginContainer />}\n               />               \n               <Route\n                  path=\"/Myprofile\"\n                  render={() => <MyProfileContainer />}\n               />\n               <Route\n                  path=\"/profile/:userId?\"\n                  render={whitSuspense(ProfileContainer)}\n               />\n               <Route\n                  path=\"/message\"\n                  render={whitSuspense(MessageContainer)}/>\n\n               <Route \n                  path=\"/news\" \n                  render={() => <News />}\n               />\n\n               <Route \n                  path=\"/music\" \n                  component={Music} \n               />\n               <Route \n                  path=\"/users\" \n                  component={UsersContainer} \n               />\n\n               <Route \n                  path=\"/setting\" \n                  component={Setting} \n               />\n            </div>\n            <Footer />\n         </div>\n      </HashRouter>\n\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n   <HashRouter>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </HashRouter>,\n   document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/ava.2dca3c78.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Post_Posts__s5e-v\",\"post\":\"Post_post__1AvUM\",\"likeAndDisLike\":\"Post_likeAndDisLike___RxY0\",\"likeActive\":\"Post_likeActive__2hUQu\",\"noActiv\":\"Post_noActiv__eJC_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__r3du6\",\"ExitIco\":\"Header_ExitIco__2du4j\",\"login\":\"Header_login__3NaN7\",\"login__link\":\"Header_login__link__3bGTY\",\"login__nik\":\"Header_login__nik__1Fj6g\",\"logoutBtn\":\"Header_logoutBtn__KGXqq\"};","import React from 'react';\r\nimport './Preloader.scss';\r\n\r\nconst Preloader = () => {\r\n   return (\r\n      <div className=\"preloader\">\r\n         <div id=\"cube-loader\">\r\n            <div className=\"caption\">\r\n               <div className=\"cube-loader\">\r\n               <div className=\"cube loader-1\"></div>\r\n               <div className=\"cube loader-2\"></div>\r\n               <div className=\"cube loader-4\"></div>\r\n               <div className=\"cube loader-3\"></div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Preloader;\r\n","\r\nconst maxLength = max => value =>\r\n   value && value.length > max \r\n   ? `Максимальная длина сообщения ${max} символов` \r\n   : undefined\r\nexport const maxLength500 = maxLength(500)\r\n\r\nconst minLength = min => value =>\r\n   value && value.length < min \r\n   ? `Must be ${min} characters or more` \r\n   : undefined\r\nexport const minLength4 = minLength(4)\r\n\r\nexport const email = value =>\r\n   value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) \r\n   ?  'Invalid email address' \r\n   :  undefined\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1JQ2p\",\"pagination__page\":\"Pagination_pagination__page__njCfP\",\"pagination__pageActive\":\"Pagination_pagination__pageActive__1F-_F\",\"prev\":\"Pagination_prev__3X-Zc\",\"next\":\"Pagination_next__2WQFu\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let mapStateToProps = (state) => {\r\n      return {\r\n         isAuth: state.auth.isAuth,\r\n      }\r\n   }\r\n\r\n   return connect(mapStateToProps, {})(RedirectComponent)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserCard_user__1OPVG\",\"avatar\":\"UserCard_avatar__2BHMV\",\"user__content\":\"UserCard_user__content__1-BIf\",\"locations\":\"UserCard_locations__1Lg61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFollow\":\"SubscribeBtn_btnFollow__1RwV0\",\"btnOnFollow\":\"SubscribeBtn_btnOnFollow__1PnOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddMessageForm_form__1gxLE\",\"textarea\":\"AddMessageForm_textarea__1aBQa\",\"noValid\":\"AddMessageForm_noValid__1Q7O3\"};"],"sourceRoot":""}